if(typeof(SpeechStream) =="undefined"){ SpeechStream = {};}if(typeof(SpeechStream.calculator) =="undefined"){ SpeechStream.calculator = {}; SpeechStream.calculator.shortName ="SSCAL";}var SSCAL = SpeechStream.calculator;SSCAL.bLoaded = false;SSCAL.bStandAlone = false;SSCAL.init = function(Xqb){ if(!SSCAL.bLoaded) { if(typeof(Xqb) =="undefined"|| Xqb == null) { Xqb = new SSCAL.Data(); } this.setupCss(Xqb); this.setupHtml(Xqb); SSCAL.bLoaded = true; }};SSCAL.show = function(){ document.getElementById("rwCal").style.visibility ="visible";};SSCAL.hide = function(){ document.getElementById("rwCal").style.visibility ="hidden";};var omb = 0; var pmb = 16; var qmb = 0; var rmb ="0"; var smb = 0;function rw_calFunc(umb){ if(omb != 0) { rw_calEquals(); } if(umb.indexOf("*") > -1) { omb = 1; } if(umb.indexOf("/") > -1) { omb = 2; } if(umb.indexOf("+") > -1) { omb = 3; } if(umb.indexOf("-") > -1) { omb = 4; } qmb = smb; rmb =""; }function rw_calDec(){ if(rmb.length == 0) { rmb ="0."; } else { if(( rmb.indexOf(".") == -1) && ( rmb.indexOf("e") == -1) ) { rmb = rmb +"."; } } smb = parseFloat(rmb); Fnb(rmb); }function rw_calPlusMinus(){ if(rmb.indexOf("!") == -1) { smb = smb * -1; rmb =""+ smb; } else { rmb ="Press 'AC'!"; } Fnb(rmb); }function rw_calEquals(){ if(rmb !="") { if((rmb.indexOf("!") == -1)) { if(omb == 1) { smb = qmb * smb; } if(omb == 2) { if(smb != 0) { smb = qmb / smb; } else { rmb ="Cannot divide by zero!"; } } if(omb == 3) { smb = qmb + smb; } if(omb == 4) { smb = qmb - smb; } if(omb == 2 && smb == 0) { } else { rmb = smb +""; } omb = 0; qmb = 0; if(rmb.indexOf("Infinity") != -1) { rmb ="Value too long!"; } if(rmb.indexOf("NaN") != -1) { rmb ="N/A!"; } } else { rmb ="Press 'AC'!"; } Fnb(rmb); if(Dnb()) { $rw_speakText(rmb); } rmb ="0"; }}function rw_calAddDigit(zmb){ if(rmb.length < pmb) { if(rmb.indexOf("!") == -1) { if((parseFloat(rmb) == 0) && (rmb.indexOf(".") == -1)) { rmb = zmb; } else { rmb = rmb + zmb; } smb = parseFloat(rmb); } else { rmb ="Press 'AC'!"; } } Fnb(rmb); }function rw_calClearNum(){ smb = 0; rmb =""+ smb; Fnb(rmb); }function rw_calClearMem(){ smb = 0; omb = 0; qmb = 0; rmb =""+ smb; Fnb(rmb); }function Dnb(){ var IBc = document.getElementById("rw_calspeechbutton"); if(IBc != null) { return IBc.checked; } else { return false; }}function Enb(){ return document.getElementById("rw_calForm");}function Fnb(Gnb){ document.getElementById("rw_calDis").value = Gnb;}function $rw_calcInit(){ var Inb = new SSCAL.Data(); if(typeof(aga.pageData.placeholder) !="undefined") { Inb.setup(Lfa, Eda, aga.paths.strFileLoc, aga.pageData.placeholder, bfa); } SSCAL.init(Inb);}setTimeout($rw_calcInit, 10);SSCAL.LanguageData = function(){ this.languageCodes = {ENGLISH_UK:0, ENGLISH_US:1}; this.nLanguage = 0;};SSCAL.Data = function(){ var self = this; this.browser = {}; this.browser.bIE = false; this.browser.bTouchScreen = false; this.languageData = new SSCAL.LanguageData(); this.paths = {}; this.paths.strFileLoc =""; this.placeholder = null; this.defaultPlaceholder = null; if(document && document.body) { this.defaultPlaceholder = document.body; } this.setup = function(p_bIE, p_nLang, p_strFileLoc, p_placeholder, p_bTouchScreen) { if(p_bIE == null) { self.browser.bIE = (navigator.appName =="Microsoft Internet Explorer") || navigator.userAgent.toLowerCase().indexOf("trident") > -1; } else { self.browser.bIE = p_bIE; } if(p_nLang > -1) { self.languageData.nLanguage = p_nLang; } if(p_strFileLoc != null) { self.paths.strFileLoc = p_strFileLoc; } if(p_placeholder != null) { self.placeholder = p_placeholder; } self.browser.bTouchScreen = p_bTouchScreen; };};SSCAL.setupCss = function(Xqb){ var Mnb = Xqb.paths.strFileLoc; var ph = (Xqb.placeholder)?Xqb.placeholder:Xqb.defaultPlaceholder; if(Xqb.browser.bIE) { SSDOM.Hnb(ph,"<link href=\""+ Mnb +"rwcalculator.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } else { SSDOM.Hnb(ph,"<link href=\""+ Mnb +"rwcalculatorSFF.css\" type=\"text/css\" rel=\"stylesheet\" />", false); }};SSCAL.setupHtml = function(Xqb){ var ph = (Xqb.placeholder)?Xqb.placeholder:Xqb.defaultPlaceholder; var Nnb = Xqb.placeholder == null; var Hpb =""; Hpb +='<div id="rwCal" rwTHcomp="1" style="visibility:hidden'+ (SSCAL.bStandAlone?";position:relative":"") +'" texthelpStopContinuous="1">'; Hpb +=' <div class="rwCalPopupOutline">'; var OAc = Xqb.languageData; if(OAc.nLanguage == OAc.languageCodes.ENGLISH_UK || OAc.nLanguage == OAc.languageCodes.ENGLISH_US) { Hpb +='  <div id="rwDragMeCal" class="rwToolbarCaptionCal" >'; } else { Hpb +='  <div id="rwDragMeCal" class="rwToolbarSpanCaptionCal" >'; } if(!SSCAL.bStandAlone) { Hpb +='    <img name="calImg" align="right" src="'+ Xqb.paths.strFileLoc +'rwimgs/thex.bmp" onmouseover="$rw_divOver(8);" onmouseout="$rw_divOut(8);" '+'onmouseup="$rw_divPress(8);" />'; } Hpb +='</div>'; Hpb +='<div class="rwCalPopupContent">'; Hpb +='<form name="rw_calForm" class="rw_calForm" id="rw_calForm">'; Hpb +='<table class="rw_calTable">'; Hpb +="<tbody>"; Hpb +='<tr>'; Hpb +='<td colSpan="2">'; Hpb +='<input type="text" class="rwcaldisplay" id="rw_calDis" maxlength="40" name="rw_calDis" readonly="readonly" />'; Hpb +='</td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td colSpan="2" class="rwcalspeechbutton">'; if(Xqb.browser.bTouchScreen || SSCAL.bStandAlone) { Hpb +='<br/>'; } else { Hpb +='<input type="checkbox" id="rw_calspeechbutton" name="rw_calspeechbutton" /><span>Speech on</span>'; } Hpb +='</td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td> '; Hpb +='<table>'; Hpb +="<tbody>"; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="7" name="seven" onclick="rw_calAddDigit(\'7\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="8" name="eight" onclick="rw_calAddDigit(\'8\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="9" name="nine" onclick="rw_calAddDigit(\'9\');"/></td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="4" name="four" onclick="rw_calAddDigit(\'4\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="5" name="five" onclick="rw_calAddDigit(\'5\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="6" name="six" onclick="rw_calAddDigit(\'6\');"/></td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="1" name="one" onclick="rw_calAddDigit(\'1\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="2" name="two" onclick="rw_calAddDigit(\'2\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="3" name="three" onclick="rw_calAddDigit(\'3\');"/></td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="+/-" name="toggle the sign of the number" onclick="rw_calPlusMinus();"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="0" name="zero" onclick="rw_calAddDigit(\'0\');"/></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="." name="decimal point" onclick="rw_calDec();"/></td>'; Hpb +='</tr>'; Hpb +="</tbody>"; Hpb +='</table>'; Hpb +='</td>'; Hpb +='<td>'; Hpb +='<table>'; Hpb +="<tbody>"; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="C" name="clear" onclick="rw_calClearNum();" /></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="AC" name="clear memory" onclick="rw_calClearMem();" /></td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="*" name="multiply" onclick="rw_calFunc(\'*\');" /></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="/" name="divide" onclick="rw_calFunc(\'/\');" /></td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td><input type="button" class="rwcalbutton" value="+" name="plus" onclick="rw_calFunc(\'+\');" /></td>'; Hpb +='<td><input type="button" class="rwcalbutton" value="-" name="minus" onclick="rw_calFunc(\'-\');" /></td>'; Hpb +='</tr>'; Hpb +='<tr>'; Hpb +='<td colSpan="2"><input type="button" class="rwcalEqbutton" value="=" name="equals" onclick="rw_calEquals();" /></td>'; Hpb +='</tr>'; Hpb +="</tbody>"; Hpb +='</table>'; Hpb +='</td>'; Hpb +='</tr>'; Hpb +="</tbody>"; Hpb +='</table>'; Hpb +='</form>'; Hpb +='</div></div></div>'; SSDOM.Hnb(ph, Hpb, false);};
