function $rw_barSSInit(){ var rkb = Yga.paths.rkb; if( (jca & collect_icon) == collect_icon || (lca & collect_icon) == collect_icon ) { if(Lfa) { SSDOM.Zmb(Yga.pageData.placeholder,"<link href=\""+ rkb +"rwssIE.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } else { SSDOM.Zmb(Yga.pageData.placeholder,"<link href=\""+ rkb +"rwssSFF.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } var Zob =""; Zob +='<div id="rwCollect" rwTHcomp="1" style="visibility:hidden" texthelpStopContinuous="1" display="none">'; Zob +=' <div id="rwToolbarOutlineCollect" >'; if(Cea) { Zob +='  <div id="rwDragMeCollect" class="rwToolbar500CaptionCollect" style="width:600px">'; } else if(Eda == ENG_UK || Eda == ENG_US) { Zob +='  <div id="rwDragMeCollect" class="rwToolbarCaptionCollect" style="width:600px">'; } else { Zob +='  <div id="rwDragMeCollect" class="rwToolbarSpanCaptionCollect" style="width:600px">'; } Zob +='    <img name="collectImg" align="right" src="'+ rkb +'rwimgs/thex.bmp" '+'onmouseover="$rw_divOver(4);" onmouseout="$rw_divOut(4);" '+'onmouseup="$rw_divPress(4);" />'; Zob +='  </div>'; if(Cea) { Zob +='<div id="rwToolbarBarCollectBorder500">'; } else { Zob +='<div id="rwToolbarBarCollectBorder">'; } Zob +='   <div id="rwTextCollect" class="rwToolbarBarCollect">'; Zob +='    <span id="rwpopupcollect"></span>'; Zob +='   </div>'; if( !(bfa) ) { Zob +='   &#160;<input class=\'rwSSbutton\' type=\'button\' onclick=\'rw_selectCollateText();\' '+'value=\''+ haa[waa][Eda] +'\' />&#160;&#160;'; Zob +='<span style="font-size:12px">'; if(Eda != SPANISH_US) { Zob +='Then use ctrl-c to copy the text to the clipboard.'; } else { Zob +='Entonces uso ctrl-c para copiar el texto al portapapeles'; } Zob +='</span>'; } Zob +='  <div>'; if(zfa) { Zob +='&#160;<span><table><tbody><tr><td>&#160;'; Zob +='<input type="button" onclick="(new SpeechStream.Vocab()).sendRequest();" value="Vocabulary list" />'; Zob +='&#160;&#160;'; Zob +='</td><td style="font-size:12px">'+'Click to do vocabulary lookup on selected single words.</td>'; Zob +='</tr></tbody></table></span>'; } Zob +='  </div>'; Zob +='  </div>'; Zob +=' </div>'; Zob +='</div>'; SSDOM.Zmb(Yga.pageData.placeholder, Zob, false); } wfa = true; if(typeof($rw_toolbarHighlightLoadedCallback) =="function") { $rw_toolbarHighlightLoadedCallback(); }}$rw_barSSInit();if(typeof(Dbb) =="undefined"){ var Dbb = new Array();}if(typeof(Ebb) =="undefined"){ var Ebb = new Array();}function Nbb(Eeb){ try { var Bfb = LRb(); if (Bfb == null || Bfb.range == null || Bfb.range instanceof String) { return false; } var rcb = Bfb.range; if(Ufa) { var dnb = rcb.parentElement().ownerDocument.body; var Ibb = eVb(dnb, rcb); if(Ibb == null) { return false; } var SAc = SSDOM.getCaretPairFromDomPosition(dnb, Ibb.Pnb.path, Ibb.Pnb.offset, Ibb.Qnb.path, Ibb.Qnb.offset); var mzb = SAc.Lfb; var nzb = SAc.Mfb; if(mzb == null || nzb == null) { return false; } var Mbb = new Wra(mzb.node, mzb.offset, nzb.node, nzb.offset); if(Mbb == null) { return null; } Mbb = ebb(Mbb); if(Mbb == null) { return null; } rcb = rw_getAsTextRange(dnb, Mbb.Pnb.path, Mbb.Pnb.offset, Mbb.Qnb.path, Mbb.Qnb.offset ); } else { rcb = ebb(rcb); } if(rcb == null) { Nya("Failed to do the highlight, possibly due to selection going into a non textual part of the page."); return false; } kbb(rcb, Eeb); axa(); if(Zda && fda && typeof(Ggb) !="undefined") { Ggb(); } return true; } catch (exc) { return false; }}function ebb(Pdb){ var mzb = Pdb.mzb; var nzb = Pdb.nzb; var Rbb = false; if(SSDOM.isInvalidNode(mzb.node)) { if(mzb.node != nzb.node) { var qtb = SSDOM.getNextTextNodeNoImg(mzb.node, false ,nzb.node, false); if(qtb != null && !SSDOM.isInvalidNode(qtb)) { mzb.node = qtb; mzb.offset = 0; Rbb = true; } else { return; } } else { return; } } var Tbb = mzb.node.nodeType != 3 || (mzb.node.nodeType == 3 && mzb.node.nodeValue.trimTH().length == 0); if(Tbb) { Rbb = true; while(Tbb) { if(mzb.node == nzb.node) { return null; } mzb.node = SSDOM.getNextTextNodeNoBlank(mzb.node, false, nzb.node); if(mzb.node == null) { return null; } Tbb = mzb.node.nodeType != 3 || (mzb.node.nodeType == 3 && mzb.node.nodeValue.trimTH().length == 0); } mzb.offset = 0; } if(SSDOM.isInvalidNode(nzb.node)) { if(mzb.node != nzb.node) { var qtb = SSDOM.getPreviousTextNodeNoImg(nzb.node, false ,mzb.node, false); if(qtb != null && !SSDOM.isInvalidNode(qtb)) { nzb.node = qtb; nzb.offset = qtb.nodeValue.length; Rbb = true; } else { return; } } else { return; } } Tbb = nzb.node.nodeType != 3 || (nzb.node.nodeType == 3 && nzb.node.nodeValue.trimTH().length == 0); if(Tbb) { Rbb = true; while(Tbb) { if(mzb.node == nzb.node) { return null; } nzb.node = SSDOM.getPreviousTextNodeNoImg(nzb.node, false, mzb.node, false); if(nzb.node == null) { return null; } Tbb = nzb.node.nodeType != 3 || (nzb.node.nodeType == 3 && nzb.node.nodeValue.trimTH().length == 0); } if(nzb.node.nodeType == 3) { nzb.offset = nzb.node.nodeValue.length; } } if(mzb.node == null || nzb.node == null) { return null; } if(Rbb) { Pdb = new Wra(mzb.node, mzb.offset, nzb.node, nzb.offset); } return Pdb;}function kbb(Pdb, Eeb){ try { var Vbb = null; var Wbb = true; if (Pdb == null || Pdb instanceof String) { return; } var Xbb = 0; var Ybb = false; if (Ufa) { Vbb = Yxa(Pdb); if (Vbb.length == 0) { return; } studySkillsHTMLRefreshRanges(); for (var Peb = 0; Peb < Dbb.length; Peb++) { var abb = Dbb[Peb]; var bbb = Pdb.duplicate(); bbb.collapse(true); var cbb = abb.inRange(bbb); bbb = Pdb.duplicate(); bbb.collapse(false); var Sdb = abb.inRange(bbb); Ybb = false; if (cbb && Sdb) { if(Ebb[Peb] == Eeb) { Wbb = false; } else { Bcb(Peb, Pdb); Ybb = true; } } else if (!cbb && Sdb) { Dcb(Peb, Pdb); Ybb = true; } else if (cbb && !Sdb) { Fcb(Peb, Pdb); Ybb = true; } else if (Pdb.inRange(abb)) { Dbb.splice(Peb, 1); Ebb.splice(Peb, 1); Peb--; Ybb = true; } if(Ybb) { ++Xbb; if(Xbb < 100) { Peb = -1; } } } } else if (Pdb.toString) { if (Pdb == null || Pdb.toString() == null || Pdb.toString() =="") { return; } for (var Peb = 0; Peb < Dbb.length; Peb++) { var Mdb = Dbb[Peb]; if(Pdb.body.ownerDocument == Mdb.body.ownerDocument) { var Ndb = Pdb.compareRange(Mdb); switch(Ndb) { case Mra: window.status ="Error occurred when trying to add a highlight."; break; case Nra: if(Ebb[Peb] == Eeb) { Wbb = false; break; } case Qra: Mdb.refresh(); UFb(SSDOM.getListOfHighlightableNodes(Mdb.mzb, Mdb.nzb)); Dbb.splice(Peb, 1); Ebb.splice(Peb, 1); --Peb; Pdb.refresh(); Ybb = true; break; case Rra: case Ura: case Vra: if(Ebb[Peb] == Eeb) { Wbb = false; } else { jcb(Peb, Pdb, Ndb); ++Peb; Ybb = true; } break; case Tra: ncb(Peb, Pdb); Ybb = true; break; case Sra: ocb(Peb, Pdb); Ybb = true; break; case Ora: break; case Pra: break; default : } } if(Ybb) { ++Xbb; if(Xbb < 100) { Peb = -1; } } } } else { return; } if(Vfa) { axa(); } if (Wbb) { if(Pdb.execCommand) { Odb(Pdb); wbb(Pdb, Eeb); } else { var mzb = Pdb.mzb; var nzb = Pdb.nzb; var result = rw_setHighlight(mzb.node, mzb.offset, nzb.node, nzb.offset, Eeb); } Dbb.push(Pdb); Ebb.push(Eeb); } axa(); return true; } catch (exc) { return false; }}function wbb(Pdb, Eeb){ if(Eeb =="strikethrough") { Pdb.execCommand("strikethrough", false, null); } else { Pdb.execCommand("backcolor", false, Eeb); }}function Bcb(zyb, rcb){ var Gdb = Dbb[zyb].duplicate(); var Hdb = Dbb[zyb].duplicate(); Gdb.collapse(true); Hdb.collapse(false); while (Gdb.compareEndPoints("EndToStart", rcb) < 0) { Gdb.moveEnd("character", 1); } while (Hdb.compareEndPoints("StartToEnd", rcb) > 0) { Hdb.moveStart("character", -1); } Odb(Dbb[zyb]); if(Gdb.text.length == 0) { Dbb[zyb] = Hdb; wbb(Dbb[zyb], Ebb[zyb]); } else { Dbb[zyb] = Gdb; wbb(Dbb[zyb], Ebb[zyb]); if(Hdb.text.length > 0) { Dbb.push(Hdb); Ebb.push(Ebb[zyb]); wbb(Hdb, Ebb[zyb]); } }}function Dcb(zyb, rcb){ var Hdb = Dbb[zyb].duplicate(); Hdb.collapse(false); while (Hdb.compareEndPoints("StartToEnd", rcb) > 0) { Hdb.moveStart("character", -1); } Dbb[zyb] = Hdb;}function Fcb(zyb, rcb){ var Gdb = Dbb[zyb].duplicate(); Gdb.collapse(true); while (Gdb.compareEndPoints("EndToStart", rcb) < 0) { Gdb.moveEnd("character", 1); } Dbb[zyb] = Gdb;}function jcb(kcb, lcb, mcb){ var Zcb = Ebb[kcb]; var acb = Dbb[kcb]; acb.refresh(); var bcb = acb.Pnb; var ccb = lcb.Pnb; var Scb = lcb.Qnb; var Tcb = acb.Qnb; UFb(SSDOM.getListOfHighlightableNodes(acb.mzb, acb.nzb)); Dbb.splice(kcb, 1); Ebb.splice(kcb, 1); var mzb; var nzb; var result; var Mdb; if(mcb != Ura) { SAc = SSDOM.getCaretPairFromDomPosition(lcb.body, bcb.path, bcb.offset, ccb.path, ccb.offset); mzb = SAc.Lfb; nzb = SAc.Mfb; result = rw_setHighlight(mzb.node, mzb.offset, nzb.node, nzb.offset, Zcb); Mdb = new Wra(result.start, 0, result.end, result.end.nodeValue.length); Dbb.push(Mdb); Ebb.push(Zcb); } if(mcb != Vra) { SAc = SSDOM.getCaretPairFromDomPosition(lcb.body, Scb.path, Scb.offset, Tcb.path, Tcb.offset); mzb = SAc.Lfb; nzb = SAc.Mfb; result = rw_setHighlight(mzb.node, mzb.offset, nzb.node, nzb.offset, Zcb); Mdb = new Wra(result.start, 0, result.end, result.end.nodeValue.length); Dbb.push(Mdb); Ebb.push(Zcb); } lcb.refresh(); }function ncb(zyb, rcb){ var Zcb = Ebb[zyb]; var acb = Dbb[zyb]; acb.refresh(); var Scb = rcb.Qnb; var Tcb = acb.Qnb; UFb(SSDOM.getListOfHighlightableNodes(acb.mzb, acb.nzb)); Dbb.splice(zyb, 1); Ebb.splice(zyb, 1); var SAc = SSDOM.getCaretPairFromDomPosition(rcb.body, Scb.path, Scb.offset, Tcb.path, Tcb.offset); var mzb = SAc.Lfb; var nzb = SAc.Mfb; var result = rw_setHighlight(mzb.node, mzb.offset, nzb.node, nzb.offset, Zcb); var Mdb = new Wra(result.start, 0, result.end, result.end.nodeValue.length); Dbb.push(Mdb); Ebb.push(Zcb); rcb.refresh(); }function ocb(zyb, rcb){ var Zcb = Ebb[zyb]; var acb = Dbb[zyb]; acb.refresh(); var bcb = acb.Pnb; var ccb = rcb.Pnb; UFb(SSDOM.getListOfHighlightableNodes(acb.mzb, acb.nzb)); Dbb.splice(zyb, 1); Ebb.splice(zyb, 1); var SAc = SSDOM.getCaretPairFromDomPosition(rcb.body, bcb.path, bcb.offset, ccb.path, ccb.offset); var mzb = SAc.Lfb; var nzb = SAc.Mfb; var result = rw_setHighlight(mzb.node, mzb.offset, nzb.node, nzb.offset, Zcb); var Mdb = new Wra(result.start, 0, result.end, result.end.nodeValue.length); Dbb.push(Mdb); Ebb.push(Zcb); rcb.refresh(); }function pcb(range){ var FAc ="";FAc +="range.collapse="+ range.collapse +"\n";FAc +="range.duplicate="+ range.duplicate +"\n";FAc +="range.inRange="+ range.inRange +"\n";FAc +="range.text="+ range.text +"\n";FAc +="range.compareEndPoints="+ range.compareEndPoints +"\n";Nya(FAc);}function ucb(vcb){ try { var Bfb = LRb(); var rcb = null; var scb = null; if (Bfb != null && Bfb.range != null) { rcb = Bfb.range; scb = Bfb.frame; } if(rcb != null && rcb instanceof String) { if(jDb != null) { jDb.selectionStart = 0; jDb.selectionEnd = 0; } jDb = null; if(vcb) { rcb = null; } else { return; } } if (Ufa) { if (rcb == null || rcb.length == 0 || rcb.text.length == 0 || vcb) { if(!vcb) { var Idb = confirm("Remove all highlights?"); if(!Idb) { return; } } if(Zda) { Pgb = null; Qgb = null; } var Ozb = Dbb.length; for (var Peb = 0; Peb < Ozb; Peb++) { var range = Dbb[Peb]; Odb(range); Dbb[Peb] = null; Ebb[Peb] = null; } Dbb = new Array(); Ebb = new Array(); if(!document.compatMode.equalsTH("CSS1Compat")) { if(!uda && top.frames.length > 0) { var i = 0; var ycb = top.frames.length; for (i = 0; i < ycb; i++) { try { var zcb = top.frames[i]; rcb = zcb.document.selection.createRange(); rcb.expand("textedit"); Odb(rcb); } catch(e) { } } } else { rcb = document.selection.createRange(); rcb.expand("textedit"); Odb(rcb); } } if(Zda && fda && typeof(Ggb) !="undefined") { Ggb(); } return; } Odb(rcb); studySkillsHTMLRefreshRanges(); var Ozb = Dbb.length; var Peb = 0; var Kdb = null; var Ddb = null; for (Peb = 0; Peb < Ozb; Peb++) { Kdb = Dbb[Peb]; if (Kdb != null) { if (rcb.inRange(Kdb)) { Kdb = null; Dbb.splice(Peb, 1); Ebb.splice(Peb, 1); Peb--; continue; } Ddb = Kdb.duplicate(); Ddb.collapse(true); if (rcb.inRange(Ddb)) { var Hdb = Kdb.duplicate(); Hdb.collapse(false); while (Hdb.compareEndPoints("StartToEnd", rcb) > 0) { Hdb.moveStart("character", -1); } Odb(Dbb[Peb]); Dbb[Peb] = Hdb; wbb(Dbb[Peb], Ebb[Peb]); } else { Ddb = Kdb.duplicate(); Ddb.collapse(false); if (rcb.inRange(Ddb)) { var Gdb = Kdb.duplicate(); Gdb.collapse(true); while (Gdb.compareEndPoints("EndToStart", rcb) < 0) { Gdb.moveEnd("character", 1); } Odb(Dbb[Peb]); Dbb[Peb] = Gdb; wbb(Dbb[Peb], Ebb[Peb]); } } if (Kdb.inRange(rcb)) { Odb(Kdb); var Gdb = Kdb.duplicate(); var Hdb = Kdb.duplicate(); Gdb.collapse(true); Hdb.collapse(false); while (Gdb.compareEndPoints("EndToStart", rcb) < 0) { Gdb.moveEnd("character", 1); } while (Hdb.compareEndPoints("StartToEnd", rcb) > 0) { Hdb.moveStart("character", -1); } Odb(Dbb[Peb]); Dbb[Peb] = Gdb; Dbb.push(Hdb); Ebb.push(Ebb[Peb]); wbb(Gdb, Ebb[Peb]); wbb(Hdb, Ebb[Peb]); } } } rcb.execCommand("UnSelect", false, null); } else { if (rcb == null || vcb) { if(!vcb) { var Idb = confirm("Remove all highlights?"); if(!Idb) { return; } } if(Zda) { Pgb = null; Qgb = null; } var Jdb = Dbb; Dbb = new Array(); Ebb = new Array(); for (var i = 0; i < Jdb.length; i++) { var Kdb = Jdb[i]; Kdb.refresh(); UFb(SSDOM.getListOfHighlightableNodes(Kdb.mzb, Kdb.nzb)); } } else { rcb.refresh(); for (var Peb = 0; Peb < Dbb.length; Peb++) { var Mdb = Dbb[Peb]; if(rcb.body != Mdb.body) { continue; } var Ndb = rcb.compareRange(Mdb); switch(Ndb) { case Mra: window.status ="Error occurred when trying to remove a highlight."; break; case Nra: case Qra: Mdb.refresh(); UFb(SSDOM.getListOfHighlightableNodes(Mdb.mzb, Mdb.nzb)); Dbb.splice(Peb, 1); Ebb.splice(Peb, 1); --Peb; rcb.refresh(); break; case Rra: case Ura: case Vra: jcb(Peb, rcb, Ndb); ++Peb; break; case Tra: ncb(Peb, rcb); break; case Sra: ocb(Peb, rcb); break; case Ora: break; case Pra: break; default : } } } axa(); } if(Zda && fda && typeof(Ggb) !="undefined") { Ggb(); } if(Hfa[Tba]) { $rw_divPress(Tba); } } catch(exc) { qxa("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.description +" "+ exc.toString()); }}function Odb(Pdb){ Pdb.execCommand("backcolor", false,"clear"); if( (jca & strike_icon) == strike_icon ) { Pdb.execCommand("RemoveFormat", false, null); }}function Qdb(a, b){ try { return a.compareEndPoints("EndToEnd", b); } catch(exc) { qxa("sortby "+ exc.message); return 0; }}function sortBySFF(a, b){ try { if(a.equals(b)) { return 0; } a.refresh(); b.refresh(); var Rdb = a.getEndAsRange(); var Sdb = b.getEndAsRange(); return Rdb.compareBoundaryPoints("END_TO_END", Sdb); } catch(exc) { qxa("sortBySFF "+ exc.message); return 0; }}function Vdb(){ try { var cdb ="<div id='rwcollatewrapper' >"; var ddb = rdb("cyan"); var fdb = rdb("magenta"); if(ddb.length > 0 && fdb.length > 0) { fdb ="<br>"+ fdb; } var gdb = rdb("yellow"); if((ddb.length > 0 || fdb.length > 0) && gdb.length > 0) { gdb ="<br>"+ gdb; } var idb = rdb("lightgreen"); if((ddb.length > 0 || fdb.length > 0 || gdb.length > 0) && idb.length > 0) { idb ="<br>"+ idb; } cdb += ddb + fdb + gdb + idb +'</div>';return cdb; } catch (exc) { qxa("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.toString()); return""; } }function adb(Tyb){ if(Tyb.indexOf('\\') > -1 || Tyb.indexOf('~') > -1 || Tyb.indexOf('|') > -1) { var c; var i; for(i=0; i<Tyb.length; i++) { c = Tyb.charCodeAt(i); if(c==126) { Tyb = Tyb.substring(0, i) +"\\h"+ Tyb.substr(i+1); ++i; } else if(c==124) { Tyb = Tyb.substring(0, i) +"\\v"+ Tyb.substr(i+1); ++i; } else if(c==92) { Tyb = Tyb.substring(0, i) +"\\\\"+ Tyb.substr(i+1); ++i; } } } return Tyb;}function edb(){ try { var cdb; var ddb = Deb("cyan"); cdb = ddb; var fdb = Deb("magenta"); if(cdb.length > 0 && fdb.length > 0) { cdb +="|"; } cdb += fdb; var gdb = Deb("yellow"); if(cdb.length > 0 && gdb.length > 0) { cdb +="|"; } cdb += gdb; var hdb = Deb("orange"); if(cdb.length > 0 && hdb.length > 0) { cdb +="|"; } cdb += hdb; var idb = Deb("lightgreen"); if(cdb.length > 0 && idb.length > 0) { cdb +="|"; } cdb += idb; return cdb; } catch (exc) { qxa("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.toString()); return""; }}function rw_selectCollateText(){ var aAc = document.getElementById("rwcollatewrapper"); if(aAc == null) { return; } if(Ufa) { var range = SSDOM.getRangeObject(aAc.ownerDocument.body); range.moveToElementText(aAc) ; range.select(); } else { var qtb = SSDOM.getNextNodeIgnoreChildren(aAc, false, null); if(qtb != null) { var range = new Wra(aAc, 0, qtb, 0); jxa(range); } } try { var flash = Mab.getConnector(); if(flash != null) { var Vsb = Dva(); if(!(Vsb == null || Vsb.length == 0)) { flash.setToClipboard(Vsb.valueOf()); } } } catch(ignore) { thLogE(ignore); }}function $rw_getHighlights(Eeb){ Eeb = Eeb.toLowerCase(); if(Eeb =="blue") { Eeb ="cyan"; } else if(Eeb =="red") { Eeb ="magenta"; } if(Eeb =="green") { Eeb ="lightgreen"; } return rdb(Eeb);}function rdb(Eeb){ var dlb = new Array(); var Ozb = Dbb.length; var Ceb =""; var Feb =''; var Vvb = 0; for (var zeb = 0; zeb < Ozb; zeb++) { var Cnb = Ebb[zeb]; if (Cnb == Eeb) { dlb.push(Dbb.slice(zeb, zeb + 1).pop()); } } if (Ufa) { dlb.sort(Qdb); } else { dlb.sort(sortBySFF); } var Wgb = dlb.length; var gub; for (var zeb = 0; zeb < Wgb; zeb++) { if (Ufa) { gub = dlb.slice(zeb, zeb + 1).pop().text; } else { gub = dlb[zeb].toString(); } if (gub.length > 0) { gub = bUb(gub); if(Vvb > 0){Feb +='<br>';} Vvb++; Feb +=''+ Vvb +': '+ gub +'<br>'; } } if(Vvb > 0) { Ceb +='<p></p>'; Ceb +='<div style="background:'+ Eeb +'">'; Ceb += Feb; Ceb +='</div><p></p>'; } return Ceb;}function Deb(Eeb){ var dlb = new Array(); var Ozb = Dbb.length; var Ceb =""; var Feb =''; for (var zeb = 0; zeb < Ozb; zeb++) { var Cnb = Ebb[zeb]; if (Cnb == Eeb) { dlb.push(Dbb.slice(zeb, zeb + 1).pop()); } } if (Ufa) { dlb.sort(Qdb); } else { dlb.sort(sortBySFF); } var Wgb = dlb.length; var gub; for (var zeb = 0; zeb < Wgb; zeb++) { if (Ufa) { gub = dlb.slice(zeb, zeb + 1).pop().text; } else { gub = dlb[zeb].toString(); } if (gub.length > 0) { Feb +='~'+ adb(gub); } } if(Feb.length > 0) { Ceb += Eeb; Ceb += Feb; } return Ceb;}function Leb(){ return (Dbb != null && Dbb.length > 0);}function $rw_event_cyan(){ try { Nbb('cyan'); } catch(err) { thLogE(err); }}function $rw_event_magenta(){ try { Nbb('magenta'); } catch(err) { thLogE(err); }}function $rw_event_yellow(){ try { Nbb('yellow'); } catch(err) { thLogE(err); }}function $rw_event_orange(){ try { Nbb('orange'); } catch(err) { thLogE(err); }}function $rw_event_green(){ try { Nbb('lightgreen'); } catch(err) { thLogE(err); }}function $rw_event_strike(){ try { Nbb('strikethrough'); } catch(err) { thLogE(err); }}function $rw_event_clear(){ try { ucb(false); } catch(err) { thLogE(err); }}function $rw_clearAllHighlights(){ ucb(true);}function $rw_refreshHighlights(){ var Meb = Zda; Zda = false; ucb(true); Zda = Meb; Ngb();}function $rw_event_collect(){ try { Lwa(); } catch(err) { thLogE(err); }}function $rw_event_vocabulary(){ try { (new SpeechStream.Vocab()).sendRequest(); } catch(err) { thLogE(err); }}function studySkillsHTMLRefreshRanges(){ try { var Neb = null; var Oeb = false; var Peb = 0; for (Peb = 0; Peb < Dbb.length; Peb++) { Neb = Dbb[Peb]; try { if (Neb.text == null || Neb.text =="") { Neb = null; } } catch(exe) { thLogE(exe); Neb = null; } if (Neb == null) { Dbb.splice(Peb, 1); Ebb.splice(Peb, 1); Oeb = true; Peb--; } } return Oeb; } catch (exc) { qxa("Error in method studySkillsHTMLRefreshRanges: "+ exc.toString()); return false; }}var Reb = function(kfb){ try { eval(kfb); } catch(err) { }};function Ueb(ppb){ var Ckb; if(jda != null) { Ckb = jda; } else { Ckb = hda; } var Dkb = Pya(false) + Ckb +"/stickynoteserver/"; var Web ="cmd="+ whb; if(!Yda) { Web +="&custid="+ ujb(yca); } Web +="&titleid="+ ujb(zca); Web +="&pageid="+ ujb(Ada); Web +="&teacherid="+ ujb(dda); Web +="&studentid="+ ujb(bda); var ieb = ppb[0]; var jeb = ppb[1]; Web +="&ssdata="+ ujb(ieb); if(jeb != null) { Web +="&highlighttext="+ jeb; } var Zeb = new SpeechStream.AjaxRequest(); Zeb.doPost(Dkb, Web, Reb, null, false);}function ceb(ppb){ var Ckb; if(jda != null) { Ckb = jda; } else { Ckb = hda; } var Dkb = Pya(false) + Ckb +"/stickynoteserver/?"+ shb +"="+ whb; if(!Yda) { Dkb +="&custid="+ ujb(yca); } Dkb +="&titleid="+ ujb(zca); Dkb +="&pageid="+ ujb(Ada); Dkb +="&teacherid="+ ujb(dda); Dkb +="&studentid="+ ujb(bda); var ieb = ppb[0]; var jeb = ppb[1]; Dkb +="&ssdata="+ ujb(ieb); if(jeb != null) { Dkb +="&highlighttext="+ encodeURIComponent(jeb); } var Fkb = document.createElement("script"); Fkb.type ="text/javascript"; Fkb.src = Dkb; document.body.appendChild(Fkb);}function meb(ppb){ var flash = Mab.getConnector(); if(flash != null) { var ieb = ppb[0]; var jeb = ppb[1]; var Ckb; if(jda != null) { Ckb = jda; } else { Ckb = hda; } var Dkb = Pya(false) + Ckb +"/stickynoteserver/"; var oeb = whb; var peb = (Yda)?null:yca; var qeb = zca; var reb = Ada; var seb = dda; var teb = bda; flash.storeIEHighlightData(Dkb, oeb, peb, qeb, reb, seb, teb, ieb, jeb); }}function $rw_submitViaFlashCallback(p_strSrc){ eval(p_strSrc);}var ueb = 0; function xeb(){ var Ozb = Dbb.length; var fhb =""; var yeb = null; if(gda) { yeb ="|"; } try { for (var zeb = 0; zeb < Ozb; zeb++) { fhb +="|"; var Cnb = Ebb[zeb]; fhb += Cnb +"|"; var Bfb = Dbb[zeb]; var Pnb; var Qnb; var iAc; if(Ufa) { if(gda) { iAc = Bfb.text; } var Ffb = eVb(document.body, Bfb); Pnb = Ffb.Pnb; Qnb = Ffb.Qnb; } else { Bfb.refresh(); if(gda) { iAc = Bfb.toString(); } var Wsb = Bfb.mzb.node; var startOffset = Bfb.mzb.offset; var Hfb = Bfb.nzb.node; var endOffset = Bfb.nzb.offset; if(Wsb.nodeType == 3 && Wsb.nodeValue.trimTH().length == 0) { Wsb = SSDOM.getNextNode(Wsb, false, Hfb); startOffset = 0; while(Wsb != null && Wsb.nodeType == 3 && Wsb.nodeValue.trimTH().length == 0) { Wsb = SSDOM.getNextNode(Wsb, false, Hfb); } if(Wsb == null) { Wsb = Hfb; } } var Ifb = GTb(Wsb, startOffset); if(Hfb.nodeType == 3 && Hfb.nodeValue.trimTH().length == 0) { endOffset = 0; while(Wsb != Hfb && Hfb != null && Hfb.nodeType == 3 && Hfb.nodeValue.trimTH().length == 0) { Hfb = SSDOM.getPreviousNode(Hfb, false, Wsb); } if(Hfb != null && Hfb.nodeType == 3 && Hfb.nodeValue.trimTH().length > 0) { endOffset = Hfb.nodeValue.length; } } var Jfb = GTb(Hfb, endOffset); Pnb = Ifb; Qnb = Jfb; } if(Pnb != null && Qnb != null) { var SAc = SSDOM.getCaretPairFromDomPosition(document.body, Pnb.path, Pnb.offset, Qnb.path, Qnb.offset); var Lfb = SAc.Lfb; var Mfb = SAc.Mfb; fhb += Rfb(Lfb) +"|"+ Rfb(Mfb); if(gda) { iAc = WUb(iAc,"|","&#124;"); yeb += encodeURIComponent(iAc) +"|"; } } } if(fhb.length > 0) { fhb +="|*188"; } } catch(ignore) { thLogE(ignore); } return new Array(fhb, yeb);}function Rfb(Sfb){ var qtb = Sfb.node; var lxb = Sfb.offset; lxb += QTb(qtb); var mjb = qtb.parentNode; var njb = mjb.getAttribute("id"); while((njb == null || njb.length == 0) && mjb != document.body) { lxb += QTb(mjb); mjb = mjb.parentNode; njb = mjb.getAttribute("id"); } if(njb != null && njb.length > 0) { gjb ="idx"+ njb; if(mjb != null && mjb.firstChild != null) { var Lyb = SSDOM.getFirstChildTextNode(mjb, false); if(Lyb.nodeType == 3) { var Zfb = 0; var Vsb = Lyb.nodeValue; while(Vsb.length > Zfb) { if(Vsb.charCodeAt(Zfb) == 32) { ++Zfb; } else { break; } } lxb -= Zfb; } } } else { var Wfb = GTb(Sfb.node, Sfb.offset); gjb = Wfb.path; lxb = Wfb.offset; } return gjb +"|"+ lxb;}function cfb(dfb, gfb, ffb){ var Xfb = document.getElementById(dfb.substr(3)); if(Xfb == null) { return null; } var cmb = SSDOM.getPositionInDom(Xfb); var Zfb = 0; if(ffb) { if(Xfb != null && Xfb.firstChild != null) { var Lyb = SSDOM.getFirstChildTextNode(Xfb, false); if(Lyb == null) { return null; } if(Lyb.nodeType == 3) { var Vsb = Lyb.nodeValue; while(Vsb.length > Zfb) { if(Vsb.charCodeAt(Zfb) == 32) { ++Zfb; } else { break; } } } } } return new THDomRefPt(cmb, gfb + Zfb);}function jfb(kfb){ var hfb = false; if(kfb.length > 4) { var ifb = kfb.substr(kfb.length-4); if(ifb.charAt(0) =="*") { var lfb = parseInt(ifb.substr(ifb.length-3), 10); if(lfb >= 188) { hfb = true; } } } var mfb; var pzb; var ofb; var pfb; var qzb; var rfb; var sfb; var tfb; var Lkb = kfb.indexOf('|'); var wvb = kfb.indexOf('|', Lkb + 1); var wfb = kfb.indexOf('|', wvb + 1); var xfb = kfb.indexOf('|', wfb + 1); var yfb = kfb.indexOf('|', xfb + 1); var zfb = kfb.indexOf('|', yfb + 1); while(Lkb > -1 && wvb > -1 && wfb > -1 && xfb > -1 && yfb > -1 && zfb > -1) { tfb = true; mfb = kfb.substring(Lkb + 1, wvb); pzb = kfb.substring(wvb + 1, wfb); ofb = kfb.substring(wfb + 1, xfb); qzb = kfb.substring(xfb + 1, yfb); rfb = kfb.substring(yfb + 1, zfb); pfb = parseInt(ofb, 10); sfb = parseInt(rfb, 10); if(pzb.length > 3 && pzb.substring(0, 3) =="idx") { var Bgb = cfb(pzb, pfb, hfb); if(Bgb == null) { tfb = false; } else { pzb = Bgb.path; pfb = Bgb.offset; } } if(qzb.length > 3 && qzb.substring(0, 3) =="idx") { var Bgb = cfb(qzb, sfb, hfb); if(Bgb == null) { tfb = false; } else { qzb = Bgb.path; sfb = Bgb.offset; } } if(tfb) { var range = null; if(Ufa) { range = rw_getAsTextRange(document.body, pzb, pfb, qzb, sfb); } else { var SAc = SSDOM.getCaretPairFromDomPosition(document.body, pzb, pfb, qzb, sfb); var mzb = SAc.Lfb; var nzb = SAc.Mfb; if(mzb != null && nzb != null) { range = new Wra(mzb.node, mzb.offset, nzb.node, nzb.offset); } } if(range != null) { kbb(range, mfb); } else { tfb = false; } } if(!tfb) { if(Qgb == null) { Qgb =""; } Qgb += kfb.substring(Lkb, zfb); } Lkb = zfb; wvb = kfb.indexOf('|', Lkb + 1); wfb = kfb.indexOf('|', wvb + 1); xfb = kfb.indexOf('|', wfb + 1); yfb = kfb.indexOf('|', xfb + 1); zfb = kfb.indexOf('|', yfb + 1); }}function Ggb(){ var data = xeb(); if(Qgb != null) { data[0] = Qgb + data[0]; if(gda) { ueb = 1; } } else { ueb = 0; } Pgb = null; if(Lfa) { meb(data); } else { if(gda) { Ueb(data); } else { ceb(data); } }}function Igb(Jgb){ eval(Jgb);}function Ngb(){ if(Pgb != null) { $rw_retrieveHighlightDataForPKTReply(Pgb); return; } var d = new Date(); var blb = d.getTime(); var Ckb; if(jda != null) { Ckb = jda; } else { Ckb = hda; } var Dkb = Pya(false) + Ckb +"/stickynoteserver/?"+ shb +"="+ xhb; if(!Yda) { Dkb +="&custid="+ ujb(yca); } Dkb +="&titleid="+ ujb(zca); Dkb +="&pageid="+ ujb(Ada); Dkb +="&teacherid="+ ujb(dda); Dkb +="&studentid="+ ujb(bda); Dkb +="&"+ blb + Math.floor(Math.random()*111); var Fkb = document.createElement("script"); Fkb.type ="text/javascript"; Fkb.src = Dkb; document.body.appendChild(Fkb);}var Pgb = null;var Qgb = null;function $rw_retrieveHighlightDataForPKTReply(Yvb){ try { var gzb; if(ueb == 2) { gzb = Qgb; } Qgb = null; jfb(Yvb); Pgb = Yvb; if(ueb == 2) { if(gzb != Qgb) { Ggb(); } if(Qgb == null) { ueb = 0; } else { ueb = 1; } } } catch(err) { qxa(err.message); } if(ada !="*"&& typeof(Ekb) !="undefined") { Ekb(); }}SpeechStream.Vocab = function(){ this.m_bSentenceSelection = false;};SpeechStream.Vocab.prototype.fetchWords = function(){ var wordList = new Array(); var dlb = new Array(); var Ozb = Dbb.length; for (var i=0; i<Ozb; i++) { var Qzb; if (Ufa) { Qzb = Dbb.slice(i, i+1).pop().text; } else { Qzb = Dbb[i].toString(); } if(Qzb.trimTH().indexOf(" ") == -1) { dlb.push(Dbb.slice(i, i+1).pop()); if(dlb.length >= Bga && Bga != -1) { break; } } else { this.m_bSentenceSelection = true; } } if (Ufa) { dlb.sort(Qdb); } else { dlb.sort(sortBySFF); } var Wgb = dlb.length; var gub; for (var j=0; j<Wgb; j++) { if (Ufa) { gub = dlb.slice(j, j+1).pop().text; } else { gub = dlb[j].toString(); } wordList.push(owa(gub)); } return wordList;};SpeechStream.Vocab.prototype.generateRequestData = function(){ var Ygb; Ygb ="<html><body onload=\"document.getElementById('1').submit();\">Processing request"+"<form id=\"1\" action=\""; var Dkb; var agb = Math.floor(Math.random()*10); if(Aga != null) { Dkb = Aga; if(Dkb.length < 4 || Dkb.substring(0, 4) !="http") { Dkb = Pya(false) + Dkb; } if(Dkb.substr(Dkb.length - 1, 1) !="/") { Dkb +="/"; } } else { Dkb = Pya(false) +"speechus.texthelp.com/"; } Dkb +="rwvocabserver/vocab"; Ygb += Dkb; Ygb +="\" method=\"post\"> "+"<input type=\"hidden\" name=\"userName\" value=\""+ Cda +"\">"; if(Cda != Dda) { Ygb +="<input type=\"hidden\" name=\"password\" value=\""+ Dda +"\">"; } var bgb = Math.floor(Math.random()*10); if(yca != null) { Ygb +="<input type=\"hidden\" name=\"custId\" value=\""+ yca +"\">"; } if(Gda != null) { Ygb +="<input type=\"hidden\" name=\"locale\" value=\""+ Gda +"\">"; } var cgb = (new Date().getDate()); var wordList = this.fetchWords(); if(wordList == null || wordList.length == 0) { if(this.m_bSentenceSelection) { alert("No words selected to look up.  Lookup only works on single word selections, not sentences."); } else { alert("No words selected to look up."); } return null; } else { var gub =""; var i; for(i=0; i<wordList.length-1; i++) { gub += wordList[i] +"~"; } gub += wordList[wordList.length-1]; Ygb +="<input type=\"hidden\" name=\"wordList\" value=\""+ gub +"\">"; } var fgb =""+agb+wNb(agb+Cda+cgb+bgb)+bgb; Ygb +="<input type=\"hidden\" name=\"code\" value=\""+ fgb +"\">"; Ygb +="</form></body></html>"; return Ygb;};SpeechStream.Vocab.prototype.sendRequest = function(){ var ggb = this.generateRequestData(); if(ggb != null) { var hgb; try { hgb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); if(Aga != window.location.host) { hgb.close(); hgb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); } hgb.focus(); hgb.document.write(ggb); hgb.document.close(); } catch(err) { try { hgb.close(); hgb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); hgb.focus(); hgb.document.write(ggb); hgb.document.close(); } catch(err2) { thLogE(err2); } } }};
