function $rw_barSSInit(){ if( (Zca & collect_icon) == collect_icon || (bca & collect_icon) == collect_icon ) { if(Cfa) { HQb(Yea,"<link href=\""+ $g_strFileLoc +"rwssIE.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } else { HQb(Yea,"<link href=\""+ $g_strFileLoc +"rwssSFF.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } var rkb =""; rkb +='<div id="rwCollect" rwTHcomp="1" style="visibility:hidden" texthelpStopContinuous="1" display="none">'; rkb +=' <div id="rwToolbarOutlineCollect" >'; if(pda) { rkb +='  <div id="rwDragMeCollect" class="rwToolbar500CaptionCollect" style="width:600px">'; } else if(rca == ENG_UK || rca == ENG_US) { rkb +='  <div id="rwDragMeCollect" class="rwToolbarCaptionCollect" style="width:600px">'; } else { rkb +='  <div id="rwDragMeCollect" class="rwToolbarSpanCaptionCollect" style="width:600px">'; } rkb +='    <img name="collectImg" align="right" src="'+ $g_strFileLoc +'rwimgs/thex.bmp" '+'onmouseover="$rw_divOver(4);" onmouseout="$rw_divOut(4);" '+'onmouseup="$rw_divPress(4);" />'; rkb +='  </div>'; if(pda) { rkb +='<div id="rwToolbarBarCollectBorder500">'; } else { rkb +='<div id="rwToolbarBarCollectBorder">'; } rkb +='   <div id="rwTextCollect" class="rwToolbarBarCollect">'; rkb +='    <span id="rwpopupcollect"></span>'; rkb +='   </div>'; if( !(Sfa) ) { rkb +='   &#160;<input class=\'rwSSbutton\' type=\'button\' onclick=\'rw_selectCollateText();\' '+'value=\''+ gaa[vaa][rca] +'\' />&#160;&#160;'; rkb +='<span style="font-size:12px">'; if(rca != SPANISH_US) { rkb +='Then use ctrl-c to copy the text to the clipboard.'; } else { rkb +='Entonces uso ctrl-c para copiar el texto al portapapeles'; } rkb +='</span>'; } rkb +='  <div>'; if(pfa) { rkb +='&#160;<span><table><tbody><tr><td>&#160;'; rkb +='<input type="button" onclick="(new SpeechStream.Vocab()).sendRequest();" value="Vocabulary list" />'; rkb +='&#160;&#160;'; rkb +='</td><td style="font-size:12px">'+'Click to do vocabulary lookup on selected single words.</td>'; rkb +='</tr></tbody></table></span>'; } rkb +='  </div>'; rkb +='  </div>'; rkb +=' </div>'; rkb +='</div>'; HQb(Yea, rkb, false); } mfa = true; if(typeof($rw_toolbarHighlightLoadedCallback) =="function") { $rw_toolbarHighlightLoadedCallback(); }}$rw_barSSInit();if(typeof(Rbb) =="undefined"){ var Rbb = new Array();}if(typeof(Sbb) =="undefined"){ var Sbb = new Array();}function bbb(Seb){ try { var Pfb = HRb(); if (Pfb == null || Pfb.range == null || Pfb.range instanceof String) { return false; } var Fdb = Pfb.range; if(Lfa) { var kib = Fdb.parentElement().ownerDocument.body; var Wbb = DVb(kib, Fdb); if(Wbb == null) { return false; } var Qgb = xOb(kib, Wbb.Qfb.path, Wbb.Qfb.offset, Wbb.Rfb.path, Wbb.Rfb.offset); var Rgb = Qgb.Zfb; var Sgb = Qgb.afb; if(Rgb == null || Sgb == null) { return false; } var abb = new Pla(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset); if(abb == null) { return null; } abb = sbb(abb); if(abb == null) { return null; } Fdb = rw_getAsTextRange(kib, abb.Qfb.path, abb.Qfb.offset, abb.Rfb.path, abb.Rfb.offset ); } else { Fdb = sbb(Fdb); } if(Fdb == null) { ssa("Failed to do the highlight, possibly due to selection going into a non textual part of the page."); return false; } ybb(Fdb, Seb); Hsa(); if(Mda && Sda && typeof(Ugb) !="undefined") { Ugb(); } return true; } catch (exc) { return false; }}function sbb(ddb){ var Rgb = ddb.Rgb; var Sgb = ddb.Sgb; var fbb = false; if(kMb(Rgb.node)) { if(Rgb.node != Sgb.node) { var bfb = eKb(Rgb.node, false ,Sgb.node, false); if(bfb != null && !kMb(bfb)) { Rgb.node = bfb; Rgb.offset = 0; fbb = true; } else { return; } } else { return; } } var hbb = Rgb.node.nodeType != 3 || (Rgb.node.nodeType == 3 && Rgb.node.nodeValue.trimTH().length == 0); if(hbb) { fbb = true; while(hbb) { if(Rgb.node == Sgb.node) { return null; } Rgb.node = XKb(Rgb.node, false, Sgb.node); if(Rgb.node == null) { return null; } hbb = Rgb.node.nodeType != 3 || (Rgb.node.nodeType == 3 && Rgb.node.nodeValue.trimTH().length == 0); } Rgb.offset = 0; } if(kMb(Sgb.node)) { if(Rgb.node != Sgb.node) { var bfb = DKb(Sgb.node, false ,Rgb.node, false); if(bfb != null && !kMb(bfb)) { Sgb.node = bfb; Sgb.offset = bfb.nodeValue.length; fbb = true; } else { return; } } else { return; } } hbb = Sgb.node.nodeType != 3 || (Sgb.node.nodeType == 3 && Sgb.node.nodeValue.trimTH().length == 0); if(hbb) { fbb = true; while(hbb) { if(Rgb.node == Sgb.node) { return null; } Sgb.node = DKb(Sgb.node, false, Rgb.node, false); if(Sgb.node == null) { return null; } hbb = Sgb.node.nodeType != 3 || (Sgb.node.nodeType == 3 && Sgb.node.nodeValue.trimTH().length == 0); } if(Sgb.node.nodeType == 3) { Sgb.offset = Sgb.node.nodeValue.length; } } if(Rgb.node == null || Sgb.node == null) { return null; } if(fbb) { ddb = new Pla(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset); } return ddb;}function ybb(ddb, Seb){ try { var jbb = null; var kbb = true; if (ddb == null || ddb instanceof String) { return; } var lbb = 0; var mbb = false; if (Lfa) { jbb = Fsa(ddb); if (jbb.length == 0) { return; } studySkillsHTMLRefreshRanges(); for (var deb = 0; deb < Rbb.length; deb++) { var obb = Rbb[deb]; var pbb = ddb.duplicate(); pbb.collapse(true); var qbb = obb.inRange(pbb); pbb = ddb.duplicate(); pbb.collapse(false); var gdb = obb.inRange(pbb); mbb = false; if (qbb && gdb) { if(Sbb[deb] == Seb) { kbb = false; } else { Pcb(deb, ddb); mbb = true; } } else if (!qbb && gdb) { Rcb(deb, ddb); mbb = true; } else if (qbb && !gdb) { Tcb(deb, ddb); mbb = true; } else if (ddb.inRange(obb)) { Rbb.splice(deb, 1); Sbb.splice(deb, 1); deb--; mbb = true; } if(mbb) { ++lbb; if(lbb < 100) { deb = -1; } } } } else if (ddb.toString) { if (ddb == null || ddb.toString() == null || ddb.toString() =="") { return; } for (var deb = 0; deb < Rbb.length; deb++) { var adb = Rbb[deb]; if(ddb.body.ownerDocument == adb.body.ownerDocument) { var vlb = ddb.compareRange(adb); switch(vlb) { case Fla: window.status ="Error occurred when trying to add a highlight."; break; case Gla: if(Sbb[deb] == Seb) { kbb = false; break; } case Jla: adb.refresh(); Vza(Rqa(adb.Rgb, adb.Sgb)); Rbb.splice(deb, 1); Sbb.splice(deb, 1); --deb; ddb.refresh(); mbb = true; break; case Kla: case Nla: case Ola: if(Sbb[deb] == Seb) { kbb = false; } else { xcb(deb, ddb, vlb); ++deb; mbb = true; } break; case Mla: Bdb(deb, ddb); mbb = true; break; case Lla: Cdb(deb, ddb); mbb = true; break; case Hla: break; case Ila: break; default : } } if(mbb) { ++lbb; if(lbb < 100) { deb = -1; } } } } else { return; } if(Mfa) { Hsa(); } if (kbb) { if(ddb.execCommand) { cdb(ddb); Kcb(ddb, Seb); } else { var Rgb = ddb.Rgb; var Sgb = ddb.Sgb; var result = rw_setHighlight(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset, Seb); } Rbb.push(ddb); Sbb.push(Seb); } Hsa(); return true; } catch (exc) { return false; }}function Kcb(ddb, Seb){ if(Seb =="strikethrough") { ddb.execCommand("strikethrough", false, null); } else { ddb.execCommand("backcolor", false, Seb); }}function Pcb(bmb, Fdb){ var Udb = Rbb[bmb].duplicate(); var Vdb = Rbb[bmb].duplicate(); Udb.collapse(true); Vdb.collapse(false); while (Udb.compareEndPoints("EndToStart", Fdb) < 0) { Udb.moveEnd("character", 1); } while (Vdb.compareEndPoints("StartToEnd", Fdb) > 0) { Vdb.moveStart("character", -1); } cdb(Rbb[bmb]); if(Udb.text.length == 0) { Rbb[bmb] = Vdb; Kcb(Rbb[bmb], Sbb[bmb]); } else { Rbb[bmb] = Udb; Kcb(Rbb[bmb], Sbb[bmb]); if(Vdb.text.length > 0) { Rbb.push(Vdb); Sbb.push(Sbb[bmb]); Kcb(Vdb, Sbb[bmb]); } }}function Rcb(bmb, Fdb){ var Vdb = Rbb[bmb].duplicate(); Vdb.collapse(false); while (Vdb.compareEndPoints("StartToEnd", Fdb) > 0) { Vdb.moveStart("character", -1); } Rbb[bmb] = Vdb;}function Tcb(bmb, Fdb){ var Udb = Rbb[bmb].duplicate(); Udb.collapse(true); while (Udb.compareEndPoints("EndToStart", Fdb) < 0) { Udb.moveEnd("character", 1); } Rbb[bmb] = Udb;}function xcb(Kmb, zcb, Adb){ var ncb = Sbb[Kmb]; var ocb = Rbb[Kmb]; ocb.refresh(); var pcb = ocb.Qfb; var qcb = zcb.Qfb; var gcb = zcb.Rfb; var hcb = ocb.Rfb; Vza(Rqa(ocb.Rgb, ocb.Sgb)); Rbb.splice(Kmb, 1); Sbb.splice(Kmb, 1); var Rgb; var Sgb; var result; var adb; if(Adb != Nla) { Qgb = xOb(zcb.body, pcb.path, pcb.offset, qcb.path, qcb.offset); Rgb = Qgb.Zfb; Sgb = Qgb.afb; result = rw_setHighlight(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset, ncb); adb = new Pla(result.start, 0, result.end, result.end.nodeValue.length); Rbb.push(adb); Sbb.push(ncb); } if(Adb != Ola) { Qgb = xOb(zcb.body, gcb.path, gcb.offset, hcb.path, hcb.offset); Rgb = Qgb.Zfb; Sgb = Qgb.afb; result = rw_setHighlight(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset, ncb); adb = new Pla(result.start, 0, result.end, result.end.nodeValue.length); Rbb.push(adb); Sbb.push(ncb); } zcb.refresh(); }function Bdb(bmb, Fdb){ var ncb = Sbb[bmb]; var ocb = Rbb[bmb]; ocb.refresh(); var gcb = Fdb.Rfb; var hcb = ocb.Rfb; Vza(Rqa(ocb.Rgb, ocb.Sgb)); Rbb.splice(bmb, 1); Sbb.splice(bmb, 1); var Qgb = xOb(Fdb.body, gcb.path, gcb.offset, hcb.path, hcb.offset); var Rgb = Qgb.Zfb; var Sgb = Qgb.afb; var result = rw_setHighlight(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset, ncb); var adb = new Pla(result.start, 0, result.end, result.end.nodeValue.length); Rbb.push(adb); Sbb.push(ncb); Fdb.refresh(); }function Cdb(bmb, Fdb){ var ncb = Sbb[bmb]; var ocb = Rbb[bmb]; ocb.refresh(); var pcb = ocb.Qfb; var qcb = Fdb.Qfb; Vza(Rqa(ocb.Rgb, ocb.Sgb)); Rbb.splice(bmb, 1); Sbb.splice(bmb, 1); var Qgb = xOb(Fdb.body, pcb.path, pcb.offset, qcb.path, qcb.offset); var Rgb = Qgb.Zfb; var Sgb = Qgb.afb; var result = rw_setHighlight(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset, ncb); var adb = new Pla(result.start, 0, result.end, result.end.nodeValue.length); Rbb.push(adb); Sbb.push(ncb); Fdb.refresh(); }function Ddb(range){ var wcb ="";wcb +="range.collapse="+ range.collapse +"\n";wcb +="range.duplicate="+ range.duplicate +"\n";wcb +="range.inRange="+ range.inRange +"\n";wcb +="range.text="+ range.text +"\n";wcb +="range.compareEndPoints="+ range.compareEndPoints +"\n";ssa(wcb);}function Idb(Jdb){ try { var Pfb = HRb(); var Fdb = null; var Gdb = null; if (Pfb != null && Pfb.range != null) { Fdb = Pfb.range; Gdb = Pfb.frame; } if(Fdb != null && Fdb instanceof String) { if(Yxa != null) { Yxa.selectionStart = 0; Yxa.selectionEnd = 0; } Yxa = null; if(Jdb) { Fdb = null; } else { return; } } if (Lfa) { if (Fdb == null || Fdb.length == 0 || Fdb.text.length == 0 || Jdb) { if(!Jdb) { var Wdb = confirm("Remove all highlights?"); if(!Wdb) { return; } } if(Mda) { dgb = null; egb = null; } var Xmb = Rbb.length; for (var deb = 0; deb < Xmb; deb++) { var range = Rbb[deb]; cdb(range); Rbb[deb] = null; Sbb[deb] = null; } Rbb = new Array(); Sbb = new Array(); if(!document.compatMode.equalsTH("CSS1Compat")) { if(!hda && top.frames.length > 0) { var i = 0; var Mdb = top.frames.length; for (i = 0; i < Mdb; i++) { try { var Ndb = top.frames[i]; Fdb = Ndb.document.selection.createRange(); Fdb.expand("textedit"); cdb(Fdb); } catch(e) { } } } else { Fdb = document.selection.createRange(); Fdb.expand("textedit"); cdb(Fdb); } } if(Mda && Sda && typeof(Ugb) !="undefined") { Ugb(); } return; } cdb(Fdb); studySkillsHTMLRefreshRanges(); var Xmb = Rbb.length; var deb = 0; var Ydb = null; var Rdb = null; for (deb = 0; deb < Xmb; deb++) { Ydb = Rbb[deb]; if (Ydb != null) { if (Fdb.inRange(Ydb)) { Ydb = null; Rbb.splice(deb, 1); Sbb.splice(deb, 1); deb--; continue; } Rdb = Ydb.duplicate(); Rdb.collapse(true); if (Fdb.inRange(Rdb)) { var Vdb = Ydb.duplicate(); Vdb.collapse(false); while (Vdb.compareEndPoints("StartToEnd", Fdb) > 0) { Vdb.moveStart("character", -1); } cdb(Rbb[deb]); Rbb[deb] = Vdb; Kcb(Rbb[deb], Sbb[deb]); } else { Rdb = Ydb.duplicate(); Rdb.collapse(false); if (Fdb.inRange(Rdb)) { var Udb = Ydb.duplicate(); Udb.collapse(true); while (Udb.compareEndPoints("EndToStart", Fdb) < 0) { Udb.moveEnd("character", 1); } cdb(Rbb[deb]); Rbb[deb] = Udb; Kcb(Rbb[deb], Sbb[deb]); } } if (Ydb.inRange(Fdb)) { cdb(Ydb); var Udb = Ydb.duplicate(); var Vdb = Ydb.duplicate(); Udb.collapse(true); Vdb.collapse(false); while (Udb.compareEndPoints("EndToStart", Fdb) < 0) { Udb.moveEnd("character", 1); } while (Vdb.compareEndPoints("StartToEnd", Fdb) > 0) { Vdb.moveStart("character", -1); } cdb(Rbb[deb]); Rbb[deb] = Udb; Rbb.push(Vdb); Sbb.push(Sbb[deb]); Kcb(Udb, Sbb[deb]); Kcb(Vdb, Sbb[deb]); } } } Fdb.execCommand("UnSelect", false, null); } else { if (Fdb == null || Jdb) { if(!Jdb) { var Wdb = confirm("Remove all highlights?"); if(!Wdb) { return; } } if(Mda) { dgb = null; egb = null; } var Xdb = Rbb; Rbb = new Array(); Sbb = new Array(); for (var i = 0; i < Xdb.length; i++) { var Ydb = Xdb[i]; Ydb.refresh(); Vza(Rqa(Ydb.Rgb, Ydb.Sgb)); } } else { Fdb.refresh(); for (var deb = 0; deb < Rbb.length; deb++) { var adb = Rbb[deb]; if(Fdb.body != adb.body) { continue; } var vlb = Fdb.compareRange(adb); switch(vlb) { case Fla: window.status ="Error occurred when trying to remove a highlight."; break; case Gla: case Jla: adb.refresh(); Vza(Rqa(adb.Rgb, adb.Sgb)); Rbb.splice(deb, 1); Sbb.splice(deb, 1); --deb; Fdb.refresh(); break; case Kla: case Nla: case Ola: xcb(deb, Fdb, vlb); ++deb; break; case Mla: Bdb(deb, Fdb); break; case Lla: Cdb(deb, Fdb); break; case Hla: break; case Ila: break; default : } } } Hsa(); } if(Mda && Sda && typeof(Ugb) !="undefined") { Ugb(); } if(yea[Qba]) { $rw_divPress(Qba); } } catch(exc) { bra("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.description +" "+ exc.toString()); }}function cdb(ddb){ ddb.execCommand("backcolor", false,"clear"); if( (Zca & strike_icon) == strike_icon ) { ddb.execCommand("RemoveFormat", false, null); }}function edb(a, b){ try { return a.compareEndPoints("EndToEnd", b); } catch(exc) { bra("sortby "+ exc.message); return 0; }}function sortBySFF(a, b){ try { if(a.equals(b)) { return 0; } a.refresh(); b.refresh(); var fdb = a.getEndAsRange(); var gdb = b.getEndAsRange(); return fdb.compareBoundaryPoints("END_TO_END", gdb); } catch(exc) { bra("sortBySFF "+ exc.message); return 0; }}function jdb(){ try { var qdb ="<div id='rwcollatewrapper' >"; var rdb = Feb("cyan"); var tdb = Feb("magenta"); if(rdb.length > 0 && tdb.length > 0) { tdb ="<br>"+ tdb; } var udb = Feb("yellow"); if((rdb.length > 0 || tdb.length > 0) && udb.length > 0) { udb ="<br>"+ udb; } var wdb = Feb("lightgreen"); if((rdb.length > 0 || tdb.length > 0 || udb.length > 0) && wdb.length > 0) { wdb ="<br>"+ wdb; } qdb += rdb + tdb + udb + wdb +'</div>';return qdb; } catch (exc) { bra("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.toString()); return""; } }function odb(pdb){ if(pdb.indexOf('\\') > -1 || pdb.indexOf('~') > -1 || pdb.indexOf('|') > -1) { var c; var i; for(i=0; i<pdb.length; i++) { c = pdb.charCodeAt(i); if(c==126) { pdb = pdb.substring(0, i) +"\\h"+ pdb.substr(i+1); ++i; } else if(c==124) { pdb = pdb.substring(0, i) +"\\v"+ pdb.substr(i+1); ++i; } else if(c==92) { pdb = pdb.substring(0, i) +"\\\\"+ pdb.substr(i+1); ++i; } } } return pdb;}function sdb(){ try { var qdb; var rdb = Reb("cyan"); qdb = rdb; var tdb = Reb("magenta"); if(qdb.length > 0 && tdb.length > 0) { qdb +="|"; } qdb += tdb; var udb = Reb("yellow"); if(qdb.length > 0 && udb.length > 0) { qdb +="|"; } qdb += udb; var vdb = Reb("orange"); if(qdb.length > 0 && vdb.length > 0) { qdb +="|"; } qdb += vdb; var wdb = Reb("lightgreen"); if(qdb.length > 0 && wdb.length > 0) { qdb +="|"; } qdb += wdb; return qdb; } catch (exc) { bra("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.toString()); return""; }}function rw_selectCollateText(){ var Elb = document.getElementById("rwcollatewrapper"); if(Elb == null) { return; } if(Lfa) { var range = Qra(Elb.ownerDocument.body); range.moveToElementText(Elb) ; range.select(); } else { var bfb = mIb(Elb, false, null); if(bfb != null) { var range = new Pla(Elb, 0, bfb, 0); Qsa(range); } } try { var flash = NZb.getConnector(); if(flash != null) { var Uib = poa(); if(!(Uib == null || Uib.length == 0)) { flash.setToClipboard(Uib.valueOf()); } } } catch(ignore) { thLogE(ignore); }}function $rw_getHighlights(Seb){ Seb = Seb.toLowerCase(); if(Seb =="blue") { Seb ="cyan"; } else if(Seb =="red") { Seb ="magenta"; } if(Seb =="green") { Seb ="lightgreen"; } return Feb(Seb);}function Feb(Seb){ var hgb = new Array(); var Xmb = Rbb.length; var Qeb =""; var Teb =''; var Ieb = 0; for (var Nfb = 0; Nfb < Xmb; Nfb++) { var hib = Sbb[Nfb]; if (hib == Seb) { hgb.push(Rbb.slice(Nfb, Nfb + 1).pop()); } } if (Lfa) { hgb.sort(edb); } else { hgb.sort(sortBySFF); } var kgb = hgb.length; var Bkb; for (var Nfb = 0; Nfb < kgb; Nfb++) { if (Lfa) { Bkb = hgb.slice(Nfb, Nfb + 1).pop().text; } else { Bkb = hgb[Nfb].toString(); } if (Bkb.length > 0) { Bkb = AUb(Bkb); if(Ieb > 0){Teb +='<br>';} Ieb++; Teb +=''+ Ieb +': '+ Bkb +'<br>'; } } if(Ieb > 0) { Qeb +='<p></p>'; Qeb +='<div style="background:'+ Seb +'">'; Qeb += Teb; Qeb +='</div><p></p>'; } return Qeb;}function Reb(Seb){ var hgb = new Array(); var Xmb = Rbb.length; var Qeb =""; var Teb =''; for (var Nfb = 0; Nfb < Xmb; Nfb++) { var hib = Sbb[Nfb]; if (hib == Seb) { hgb.push(Rbb.slice(Nfb, Nfb + 1).pop()); } } if (Lfa) { hgb.sort(edb); } else { hgb.sort(sortBySFF); } var kgb = hgb.length; var Bkb; for (var Nfb = 0; Nfb < kgb; Nfb++) { if (Lfa) { Bkb = hgb.slice(Nfb, Nfb + 1).pop().text; } else { Bkb = hgb[Nfb].toString(); } if (Bkb.length > 0) { Teb +='~'+ odb(Bkb); } } if(Teb.length > 0) { Qeb += Seb; Qeb += Teb; } return Qeb;}function Zeb(){ return (Rbb != null && Rbb.length > 0);}function $rw_event_cyan(){ try { bbb('cyan'); } catch(err) { thLogE(err); }}function $rw_event_magenta(){ try { bbb('magenta'); } catch(err) { thLogE(err); }}function $rw_event_yellow(){ try { bbb('yellow'); } catch(err) { thLogE(err); }}function $rw_event_orange(){ try { bbb('orange'); } catch(err) { thLogE(err); }}function $rw_event_green(){ try { bbb('lightgreen'); } catch(err) { thLogE(err); }}function $rw_event_strike(){ try { bbb('strikethrough'); } catch(err) { thLogE(err); }}function $rw_event_clear(){ try { Idb(false); } catch(err) { thLogE(err); }}function $rw_clearAllHighlights(){ Idb(true);}function $rw_refreshHighlights(){ var aeb = Mda; Mda = false; Idb(true); Mda = aeb; bgb();}function $rw_event_collect(){ try { xpa(); } catch(err) { thLogE(err); }}function $rw_event_vocabulary(){ try { (new SpeechStream.Vocab()).sendRequest(); } catch(err) { thLogE(err); }}function studySkillsHTMLRefreshRanges(){ try { var beb = null; var ceb = false; var deb = 0; for (deb = 0; deb < Rbb.length; deb++) { beb = Rbb[deb]; try { if (beb.text == null || beb.text =="") { beb = null; } } catch(exe) { thLogE(exe); beb = null; } if (beb == null) { Rbb.splice(deb, 1); Sbb.splice(deb, 1); ceb = true; deb--; } } return ceb; } catch (exc) { bra("Error in method studySkillsHTMLRefreshRanges: "+ exc.toString()); return false; }}var feb = function(yfb){ try { eval(yfb); } catch(err) { }};function ieb(Bfb){ var Fkb; if(Wda != null) { Fkb = Wda; } else { Fkb = Uda; } var Gkb = usa(false) + Fkb +"/stickynoteserver/"; var keb ="cmd="+ Bib; if(!Lda) { keb +="&custid="+ xjb(lca); } keb +="&titleid="+ xjb(mca); keb +="&pageid="+ xjb(nca); keb +="&teacherid="+ xjb(Qda); keb +="&studentid="+ xjb(Oda); var web = Bfb[0]; var xeb = Bfb[1]; keb +="&ssdata="+ xjb(web); if(xeb != null) { keb +="&highlighttext="+ xeb; } var neb = new SpeechStream.AjaxRequest(); neb.doPost(Gkb, keb, feb, null, false);}function qeb(Bfb){ var Fkb; if(Wda != null) { Fkb = Wda; } else { Fkb = Uda; } var Gkb = usa(false) + Fkb +"/stickynoteserver/?"+ xhb +"="+ Bib; if(!Lda) { Gkb +="&custid="+ xjb(lca); } Gkb +="&titleid="+ xjb(mca); Gkb +="&pageid="+ xjb(nca); Gkb +="&teacherid="+ xjb(Qda); Gkb +="&studentid="+ xjb(Oda); var web = Bfb[0]; var xeb = Bfb[1]; Gkb +="&ssdata="+ xjb(web); if(xeb != null) { Gkb +="&highlighttext="+ encodeURIComponent(xeb); } var Ikb = document.createElement("script"); Ikb.type ="text/javascript"; Ikb.src = Gkb; document.body.appendChild(Ikb);}function Afb(Bfb){ var flash = NZb.getConnector(); if(flash != null) { var web = Bfb[0]; var xeb = Bfb[1]; var Fkb; if(Wda != null) { Fkb = Wda; } else { Fkb = Uda; } var Gkb = usa(false) + Fkb +"/stickynoteserver/"; var Cfb = Bib; var Dfb = (Lda)?null:lca; var Efb = mca; var Ffb = nca; var Gfb = Qda; var Hfb = Oda; flash.storeIEHighlightData(Gkb, Cfb, Dfb, Efb, Ffb, Gfb, Hfb, web, xeb); }}function $rw_submitViaFlashCallback(p_strSrc){ eval(p_strSrc);}var Ifb = 0; function Lfb(){ var Xmb = Rbb.length; var phb =""; var Mfb = null; if(Tda) { Mfb ="|"; } try { for (var Nfb = 0; Nfb < Xmb; Nfb++) { phb +="|"; var hib = Sbb[Nfb]; phb += hib +"|"; var Pfb = Rbb[Nfb]; var Qfb; var Rfb; var hlb; if(Lfa) { if(Tda) { hlb = Pfb.text; } var Tfb = DVb(document.body, Pfb); Qfb = Tfb.Qfb; Rfb = Tfb.Rfb; } else { Pfb.refresh(); if(Tda) { hlb = Pfb.toString(); } var Ufb = Pfb.Rgb.node; var startOffset = Pfb.Rgb.offset; var Vfb = Pfb.Sgb.node; var endOffset = Pfb.Sgb.offset; if(Ufb.nodeType == 3 && Ufb.nodeValue.trimTH().length == 0) { Ufb = LIb(Ufb, false, Vfb); startOffset = 0; while(Ufb != null && Ufb.nodeType == 3 && Ufb.nodeValue.trimTH().length == 0) { Ufb = LIb(Ufb, false, Vfb); } if(Ufb == null) { Ufb = Vfb; } } var Wfb = dSb(Ufb, startOffset); if(Vfb.nodeType == 3 && Vfb.nodeValue.trimTH().length == 0) { endOffset = 0; while(Ufb != Vfb && Vfb != null && Vfb.nodeType == 3 && Vfb.nodeValue.trimTH().length == 0) { Vfb = EIb(Vfb, false, Ufb); } if(Vfb != null && Vfb.nodeType == 3 && Vfb.nodeValue.trimTH().length > 0) { endOffset = Vfb.nodeValue.length; } } var Xfb = dSb(Vfb, endOffset); Qfb = Wfb; Rfb = Xfb; } if(Qfb != null && Rfb != null) { var Qgb = xOb(document.body, Qfb.path, Qfb.offset, Rfb.path, Rfb.offset); var Zfb = Qgb.Zfb; var afb = Qgb.afb; phb += ffb(Zfb) +"|"+ ffb(afb); if(Tda) { hlb = vTb(hlb,"|","&#124;"); Mfb += encodeURIComponent(hlb) +"|"; } } } if(phb.length > 0) { phb +="|*188"; } } catch(ignore) { thLogE(ignore); } return new Array(phb, Mfb);}function ffb(gfb){ var bfb = gfb.node; var Skb = gfb.offset; Skb += nSb(bfb); var pjb = bfb.parentNode; var qjb = pjb.getAttribute("id"); while((qjb == null || qjb.length == 0) && pjb != document.body) { Skb += nSb(pjb); pjb = pjb.parentNode; qjb = pjb.getAttribute("id"); } if(qjb != null && qjb.length > 0) { jjb ="idx"+ qjb; if(pjb != null && pjb.firstChild != null) { var ofb = sIb(pjb, false); if(ofb.nodeType == 3) { var nfb = 0; var Uib = ofb.nodeValue; while(Uib.length > nfb) { if(Uib.charCodeAt(nfb) == 32) { ++nfb; } else { break; } } Skb -= nfb; } } } else { var kfb = dSb(gfb.node, gfb.offset); jjb = kfb.path; Skb = kfb.offset; } return jjb +"|"+ Skb;}function qfb(rfb, ulb, tfb){ var lfb = document.getElementById(rfb.substr(3)); if(lfb == null) { return null; } var mfb = AOb(lfb); var nfb = 0; if(tfb) { if(lfb != null && lfb.firstChild != null) { var ofb = sIb(lfb, false); if(ofb == null) { return null; } if(ofb.nodeType == 3) { var Uib = ofb.nodeValue; while(Uib.length > nfb) { if(Uib.charCodeAt(nfb) == 32) { ++nfb; } else { break; } } } } } return new THDomRefPt(mfb, ulb + nfb);}function xfb(yfb){ var vfb = false; if(yfb.length > 4) { var wfb = yfb.substr(yfb.length-4); if(wfb.charAt(0) =="*") { var zfb = parseInt(wfb.substr(wfb.length-3), 10); if(zfb >= 188) { vfb = true; } } } var Agb; var Bgb; var Cgb; var Dgb; var Egb; var Fgb; var Ggb; var Hgb; var Okb = yfb.indexOf('|'); var dlb = yfb.indexOf('|', Okb + 1); var Kgb = yfb.indexOf('|', dlb + 1); var Lgb = yfb.indexOf('|', Kgb + 1); var Mgb = yfb.indexOf('|', Lgb + 1); var Ngb = yfb.indexOf('|', Mgb + 1); while(Okb > -1 && dlb > -1 && Kgb > -1 && Lgb > -1 && Mgb > -1 && Ngb > -1) { Hgb = true; Agb = yfb.substring(Okb + 1, dlb); Bgb = yfb.substring(dlb + 1, Kgb); Cgb = yfb.substring(Kgb + 1, Lgb); Egb = yfb.substring(Lgb + 1, Mgb); Fgb = yfb.substring(Mgb + 1, Ngb); Dgb = parseInt(Cgb, 10); Ggb = parseInt(Fgb, 10); if(Bgb.length > 3 && Bgb.substring(0, 3) =="idx") { var Pgb = qfb(Bgb, Dgb, vfb); if(Pgb == null) { Hgb = false; } else { Bgb = Pgb.path; Dgb = Pgb.offset; } } if(Egb.length > 3 && Egb.substring(0, 3) =="idx") { var Pgb = qfb(Egb, Ggb, vfb); if(Pgb == null) { Hgb = false; } else { Egb = Pgb.path; Ggb = Pgb.offset; } } if(Hgb) { var range = null; if(Lfa) { range = rw_getAsTextRange(document.body, Bgb, Dgb, Egb, Ggb); } else { var Qgb = xOb(document.body, Bgb, Dgb, Egb, Ggb); var Rgb = Qgb.Zfb; var Sgb = Qgb.afb; if(Rgb != null && Sgb != null) { range = new Pla(Rgb.node, Rgb.offset, Sgb.node, Sgb.offset); } } if(range != null) { ybb(range, Agb); } else { Hgb = false; } } if(!Hgb) { if(egb == null) { egb =""; } egb += yfb.substring(Okb, Ngb); } Okb = Ngb; dlb = yfb.indexOf('|', Okb + 1); Kgb = yfb.indexOf('|', dlb + 1); Lgb = yfb.indexOf('|', Kgb + 1); Mgb = yfb.indexOf('|', Lgb + 1); Ngb = yfb.indexOf('|', Mgb + 1); }}function Ugb(){ var data = Lfb(); if(egb != null) { data[0] = egb + data[0]; if(Tda) { Ifb = 1; } } else { Ifb = 0; } dgb = null; if(Cfa) { Afb(data); } else { if(Tda) { ieb(data); } else { qeb(data); } }}function Wgb(Xgb){ eval(Xgb);}function bgb(){ if(dgb != null) { $rw_retrieveHighlightDataForPKTReply(dgb); return; } var d = new Date(); var Ylb = d.getTime(); var Fkb; if(Wda != null) { Fkb = Wda; } else { Fkb = Uda; } var Gkb = usa(false) + Fkb +"/stickynoteserver/?"+ xhb +"="+ Cib; if(!Lda) { Gkb +="&custid="+ xjb(lca); } Gkb +="&titleid="+ xjb(mca); Gkb +="&pageid="+ xjb(nca); Gkb +="&teacherid="+ xjb(Qda); Gkb +="&studentid="+ xjb(Oda); Gkb +="&"+ Ylb + Math.floor(Math.random()*111); var Ikb = document.createElement("script"); Ikb.type ="text/javascript"; Ikb.src = Gkb; document.body.appendChild(Ikb);}var dgb = null;var egb = null;function $rw_retrieveHighlightDataForPKTReply(amb){ try { var fgb; if(Ifb == 2) { fgb = egb; } egb = null; xfb(amb); dgb = amb; if(Ifb == 2) { if(fgb != egb) { Ugb(); } if(egb == null) { Ifb = 0; } else { Ifb = 1; } } } catch(err) { bra(err.message); } if(Nda !="*"&& typeof(Hkb) !="undefined") { Hkb(); }}SpeechStream.Vocab = function(){ this.m_bSentenceSelection = false;};SpeechStream.Vocab.prototype.fetchWords = function(){ var wordList = new Array(); var hgb = new Array(); var Xmb = Rbb.length; for (var i=0; i<Xmb; i++) { var Clb; if (Lfa) { Clb = Rbb.slice(i, i+1).pop().text; } else { Clb = Rbb[i].toString(); } if(Clb.trimTH().indexOf(" ") == -1) { hgb.push(Rbb.slice(i, i+1).pop()); if(hgb.length >= rfa && rfa != -1) { break; } } else { this.m_bSentenceSelection = true; } } if (Lfa) { hgb.sort(edb); } else { hgb.sort(sortBySFF); } var kgb = hgb.length; var Bkb; for (var j=0; j<kgb; j++) { if (Lfa) { Bkb = hgb.slice(j, j+1).pop().text; } else { Bkb = hgb[j].toString(); } wordList.push(dra(Bkb)); } return wordList;};SpeechStream.Vocab.prototype.generateRequestData = function(){ var mgb; mgb ="<html><body onload=\"document.getElementById('1').submit();\">Processing request"+"<form id=\"1\" action=\""; var Gkb; var ogb = Math.floor(Math.random()*10); if(qfa != null) { Gkb = qfa; if(Gkb.length < 4 || Gkb.substring(0, 4) !="http") { Gkb = usa(false) + Gkb; } if(Gkb.substr(Gkb.length - 1, 1) !="/") { Gkb +="/"; } } else { Gkb = usa(false) +"speechus.texthelp.com/"; } Gkb +="rwvocabserver/vocab"; mgb += Gkb; mgb +="\" method=\"post\"> "+"<input type=\"hidden\" name=\"userName\" value=\""+ pca +"\">"; if(pca != qca) { mgb +="<input type=\"hidden\" name=\"password\" value=\""+ qca +"\">"; } var pgb = Math.floor(Math.random()*10); if(lca != null) { mgb +="<input type=\"hidden\" name=\"custId\" value=\""+ lca +"\">"; } if(tca != null) { mgb +="<input type=\"hidden\" name=\"locale\" value=\""+ tca +"\">"; } var qgb = (new Date().getDate()); var wordList = this.fetchWords(); if(wordList == null || wordList.length == 0) { if(this.m_bSentenceSelection) { alert("No words selected to look up.  Lookup only works on single word selections, not sentences."); } else { alert("No words selected to look up."); } return null; } else { var Bkb =""; var i; for(i=0; i<wordList.length-1; i++) { Bkb += wordList[i] +"~"; } Bkb += wordList[wordList.length-1]; mgb +="<input type=\"hidden\" name=\"wordList\" value=\""+ Bkb +"\">"; } var tgb =""+ogb+lGb(ogb+pca+qgb+pgb)+pgb; mgb +="<input type=\"hidden\" name=\"code\" value=\""+ tgb +"\">"; mgb +="</form></body></html>"; return mgb;};SpeechStream.Vocab.prototype.sendRequest = function(){ var ugb = this.generateRequestData(); if(ugb != null) { var vgb; try { vgb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); if(qfa != window.location.host) { vgb.close(); vgb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); } vgb.focus(); vgb.document.write(ugb); vgb.document.close(); } catch(err) { try { vgb.close(); vgb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); vgb.focus(); vgb.document.write(ugb); vgb.document.close(); } catch(err2) { thLogE(err2); } } }};
