function $rw_barSSInit(){ var strFileLoc = aga.paths.strFileLoc; if( (jca & collect_icon) == collect_icon || (lca & collect_icon) == collect_icon ) { if(Lfa) { SSDOM.Hnb(aga.pageData.placeholder,"<link href=\""+ strFileLoc +"rwssIE.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } else { SSDOM.Hnb(aga.pageData.placeholder,"<link href=\""+ strFileLoc +"rwssSFF.css\" type=\"text/css\" rel=\"stylesheet\" />", false); } var Hpb =""; Hpb +='<span texthelpStopContinuous="1"></span>'; Hpb +='<div id="rwCollect" rwTHcomp="1" style="visibility:hidden" display="none">'; Hpb +=' <div id="rwToolbarOutlineCollect" >'; if(Cea) { Hpb +='  <div id="rwDragMeCollect" class="rwToolbar500CaptionCollect" style="width:600px">'; } else if(Eda == ENG_UK || Eda == ENG_US) { Hpb +='  <div id="rwDragMeCollect" class="rwToolbarCaptionCollect" style="width:600px">'; } else { Hpb +='  <div id="rwDragMeCollect" class="rwToolbarSpanCaptionCollect" style="width:600px">'; } Hpb +='    <img name="collectImg" align="right" src="'+ strFileLoc +'rwimgs/thex.bmp" '+'onmouseover="$rw_divOver(4);" onmouseout="$rw_divOut(4);" '+'onmouseup="$rw_divPress(4);" />'; Hpb +='  </div>'; if(Cea) { Hpb +='<div id="rwToolbarBarCollectBorder500">'; } else { Hpb +='<div id="rwToolbarBarCollectBorder">'; } Hpb +='   <div id="rwTextCollect" class="rwToolbarBarCollect">'; Hpb +='    <span id="rwpopupcollect"></span>'; Hpb +='   </div>'; if( !(bfa) ) { Hpb +='   &#160;<input class=\'rwSSbutton\' type=\'button\' onclick=\'rw_selectCollateText();\' '+'value=\''+ gaa[vaa][Eda] +'\' />&#160;&#160;'; Hpb +='<span style="font-size:12px">'; if(Eda != SPANISH_US) { Hpb +='Then use ctrl-c to copy the text to the clipboard.'; } else { Hpb +='Entonces uso ctrl-c para copiar el texto al portapapeles'; } Hpb +='</span>'; } Hpb +='  <div>'; if(zfa) { Hpb +='&#160;<span><table><tbody><tr><td>&#160;'; Hpb +='<input type="button" onclick="(new SpeechStream.Vocab()).sendRequest();" value="Vocabulary list" />'; Hpb +='&#160;&#160;'; Hpb +='</td><td style="font-size:12px">'+'Click to do vocabulary lookup on selected single words.</td>'; Hpb +='</tr></tbody></table></span>'; } Hpb +='  </div>'; Hpb +='  </div>'; Hpb +=' </div>'; Hpb +='</div>'; Hpb +='<span texthelpStopContinuous="1"></span>'; SSDOM.Hnb(aga.pageData.placeholder, Hpb, false); } wfa = true; if(typeof($rw_toolbarHighlightLoadedCallback) =="function") { $rw_toolbarHighlightLoadedCallback(); }}$rw_barSSInit();if(typeof(Ubb) =="undefined"){ var Ubb = new Array();}if(typeof(Vbb) =="undefined"){ var Vbb = new Array();}function ebb(Xeb){ try { var Ufb = cRb(); if (Ufb == null || Ufb.range == null || Ufb.range instanceof String) { return false; } var Hdb = Ufb.range; if(Ufa) { var Lob = Hdb.parentElement().ownerDocument.body; var Zbb = vVb(Lob, Hdb); if(Zbb == null) { return false; } var ABc = SSDOM.getCaretPairFromDomPosition(Lob, Zbb.xnb.path, Zbb.xnb.offset, Zbb.ynb.path, Zbb.ynb.offset); var UAc = ABc.efb; var VAc = ABc.ffb; if(UAc == null || VAc == null) { return false; } var dbb = new ira(UAc.node, UAc.offset, VAc.node, VAc.offset); if(dbb == null) { return null; } dbb = ubb(dbb); if(dbb == null) { return null; } Hdb = rw_getAsTextRange(Lob, dbb.xnb.path, dbb.xnb.offset, dbb.ynb.path, dbb.ynb.offset ); } else { Hdb = ubb(Hdb); } if(Hdb == null) { hya("Failed to do the highlight, possibly due to selection going into a non textual part of the page."); return false; } xbb(Hdb, Xeb); uxa(); if(Zda && fda && typeof(Zgb) !="undefined") { Zgb(); } return true; } catch (exc) { return false; }}function ubb(fdb){ var UAc = fdb.UAc; var VAc = fdb.VAc; var ibb = false; if(SSDOM.isInvalidNode(UAc.node)) { if(UAc.node != VAc.node) { var Yub = SSDOM.getNextTextNodeNoImg(UAc.node, false ,VAc.node, false); if(Yub != null && !SSDOM.isInvalidNode(Yub)) { UAc.node = Yub; UAc.offset = 0; ibb = true; } else { return; } } else { return; } } var kbb = UAc.node.nodeType != 3 || (UAc.node.nodeType == 3 && UAc.node.nodeValue.trimTH().length == 0); if(kbb) { ibb = true; while(kbb) { if(UAc.node == VAc.node) { return null; } UAc.node = SSDOM.getNextTextNodeNoBlank(UAc.node, false, VAc.node); if(UAc.node == null) { return null; } kbb = UAc.node.nodeType != 3 || (UAc.node.nodeType == 3 && UAc.node.nodeValue.trimTH().length == 0); } UAc.offset = 0; } if(SSDOM.isInvalidNode(VAc.node)) { if(UAc.node != VAc.node) { var Yub = SSDOM.getPreviousTextNodeNoImg(VAc.node, false ,UAc.node, false); if(Yub != null && !SSDOM.isInvalidNode(Yub)) { VAc.node = Yub; VAc.offset = Yub.nodeValue.length; ibb = true; } else { return; } } else { return; } } kbb = VAc.node.nodeType != 3 || (VAc.node.nodeType == 3 && VAc.node.nodeValue.trimTH().length == 0); if(kbb) { ibb = true; while(kbb) { if(UAc.node == VAc.node) { return null; } VAc.node = SSDOM.getPreviousTextNodeNoImg(VAc.node, false, UAc.node, false); if(VAc.node == null) { return null; } kbb = VAc.node.nodeType != 3 || (VAc.node.nodeType == 3 && VAc.node.nodeValue.trimTH().length == 0); } if(VAc.node.nodeType == 3) { VAc.offset = VAc.node.nodeValue.length; } } if(UAc.node == null || VAc.node == null) { return null; } if(ibb) { fdb = new ira(UAc.node, UAc.offset, VAc.node, VAc.offset); } return fdb;}function xbb(fdb, Xeb){ try { var mbb = false; var Yub = null; var obb = null; var pbb = null; var qbb = true; if (fdb == null || fdb instanceof String) { return; } var rbb = 0; var sbb = false; if (Ufa) { pbb = sxa(fdb); if (pbb.length == 0) { return; } try { Yub = fdb.parentElement(); var Xob = SSDOM.getComputedStyle(Yub); if(Xob != null && (Xob.display =="none")) { mbb = true; } else { var Lob = Yub.ownerDocument.body; while(Yub != Lob) { Yub = Yub.parentNode; if(SSDOM.getComputedStyle(Yub).display =="none") { mbb = true; break; } } } if(mbb) { obb = Yub.style.display; Yub.style.display ="inline"; } } catch(e){} studySkillsHTMLRefreshRanges(); for (var ieb = 0; ieb < Ubb.length; ieb++) { var Ccb = Ubb[ieb]; var Dcb = fdb.duplicate(); Dcb.collapse(true); var Ecb = Ccb.inRange(Dcb); Dcb = fdb.duplicate(); Dcb.collapse(false); var idb = Ccb.inRange(Dcb); sbb = false; if (Ecb && idb) { if(Vbb[ieb] == Xeb) { qbb = false; } else { Rcb(ieb, fdb); sbb = true; } } else if (!Ecb && idb) { Tcb(ieb, fdb); sbb = true; } else if (Ecb && !idb) { Vcb(ieb, fdb); sbb = true; } else if (fdb.inRange(Ccb)) { Ubb.splice(ieb, 1); Vbb.splice(ieb, 1); ieb--; sbb = true; } if(sbb) { ++rbb; if(rbb < 100) { ieb = -1; } } } } else if (fdb.toString) { if (fdb == null || fdb.toString() == null || fdb.toString() =="") { return; } for (var ieb = 0; ieb < Ubb.length; ieb++) { var cdb = Ubb[ieb]; if(fdb.body.ownerDocument == cdb.body.ownerDocument) { var ddb = fdb.compareRange(cdb); switch(ddb) { case Yra: window.status ="Error occurred when trying to add a highlight."; break; case Zra: if(Vbb[ieb] == Xeb) { qbb = false; break; } case cra: cdb.refresh(); hFb(SSDOM.getListOfHighlightableNodes(cdb.UAc, cdb.VAc)); Ubb.splice(ieb, 1); Vbb.splice(ieb, 1); --ieb; fdb.refresh(); sbb = true; break; case dra: case gra: case hra: if(Vbb[ieb] == Xeb) { qbb = false; } else { zcb(ieb, fdb, ddb); ++ieb; sbb = true; } break; case fra: Ddb(ieb, fdb); sbb = true; break; case era: Edb(ieb, fdb); sbb = true; break; case ara: break; case bra: break; default : } } if(sbb) { ++rbb; if(rbb < 100) { ieb = -1; } } } } else { return; } if(Vfa) { uxa(); } if (qbb) { if(fdb.execCommand) { edb(fdb); Mcb(fdb, Xeb); } else { var UAc = fdb.UAc; var VAc = fdb.VAc; var result = rw_setHighlight(UAc.node, UAc.offset, VAc.node, VAc.offset, Xeb); } Ubb.push(fdb); Vbb.push(Xeb); } uxa(); if(mbb) { Yub.style.display = obb; } return true; } catch (exc) { return false; }}function Mcb(fdb, Xeb){ if(Xeb =="strikethrough") { fdb.execCommand("strikethrough", false, null); } else { fdb.execCommand("backcolor", false, Xeb); }}function Rcb(hzb, Hdb){ var Wdb = Ubb[hzb].duplicate(); var Xdb = Ubb[hzb].duplicate(); Wdb.collapse(true); Xdb.collapse(false); while (Wdb.compareEndPoints("EndToStart", Hdb) < 0) { Wdb.moveEnd("character", 1); } while (Xdb.compareEndPoints("StartToEnd", Hdb) > 0) { Xdb.moveStart("character", -1); } edb(Ubb[hzb]); if(Wdb.text.length == 0) { Ubb[hzb] = Xdb; Mcb(Ubb[hzb], Vbb[hzb]); } else { Ubb[hzb] = Wdb; Mcb(Ubb[hzb], Vbb[hzb]); if(Xdb.text.length > 0) { Ubb.push(Xdb); Vbb.push(Vbb[hzb]); Mcb(Xdb, Vbb[hzb]); } }}function Tcb(hzb, Hdb){ var Xdb = Ubb[hzb].duplicate(); Xdb.collapse(false); while (Xdb.compareEndPoints("StartToEnd", Hdb) > 0) { Xdb.moveStart("character", -1); } Ubb[hzb] = Xdb;}function Vcb(hzb, Hdb){ var Wdb = Ubb[hzb].duplicate(); Wdb.collapse(true); while (Wdb.compareEndPoints("EndToStart", Hdb) < 0) { Wdb.moveEnd("character", 1); } Ubb[hzb] = Wdb;}function zcb(Adb, Bdb, Cdb){ var pcb = Vbb[Adb]; var qcb = Ubb[Adb]; qcb.refresh(); var rcb = qcb.xnb; var scb = Bdb.xnb; var icb = Bdb.ynb; var jcb = qcb.ynb; hFb(SSDOM.getListOfHighlightableNodes(qcb.UAc, qcb.VAc)); Ubb.splice(Adb, 1); Vbb.splice(Adb, 1); var UAc; var VAc; var result; var cdb; if(Cdb != gra) { ABc = SSDOM.getCaretPairFromDomPosition(Bdb.body, rcb.path, rcb.offset, scb.path, scb.offset); UAc = ABc.efb; VAc = ABc.ffb; result = rw_setHighlight(UAc.node, UAc.offset, VAc.node, VAc.offset, pcb); cdb = new ira(result.start, 0, result.end, result.end.nodeValue.length); Ubb.push(cdb); Vbb.push(pcb); } if(Cdb != hra) { ABc = SSDOM.getCaretPairFromDomPosition(Bdb.body, icb.path, icb.offset, jcb.path, jcb.offset); UAc = ABc.efb; VAc = ABc.ffb; result = rw_setHighlight(UAc.node, UAc.offset, VAc.node, VAc.offset, pcb); cdb = new ira(result.start, 0, result.end, result.end.nodeValue.length); Ubb.push(cdb); Vbb.push(pcb); } Bdb.refresh(); }function Ddb(hzb, Hdb){ var pcb = Vbb[hzb]; var qcb = Ubb[hzb]; qcb.refresh(); var icb = Hdb.ynb; var jcb = qcb.ynb; hFb(SSDOM.getListOfHighlightableNodes(qcb.UAc, qcb.VAc)); Ubb.splice(hzb, 1); Vbb.splice(hzb, 1); var ABc = SSDOM.getCaretPairFromDomPosition(Hdb.body, icb.path, icb.offset, jcb.path, jcb.offset); var UAc = ABc.efb; var VAc = ABc.ffb; var result = rw_setHighlight(UAc.node, UAc.offset, VAc.node, VAc.offset, pcb); var cdb = new ira(result.start, 0, result.end, result.end.nodeValue.length); Ubb.push(cdb); Vbb.push(pcb); Hdb.refresh(); }function Edb(hzb, Hdb){ var pcb = Vbb[hzb]; var qcb = Ubb[hzb]; qcb.refresh(); var rcb = qcb.xnb; var scb = Hdb.xnb; hFb(SSDOM.getListOfHighlightableNodes(qcb.UAc, qcb.VAc)); Ubb.splice(hzb, 1); Vbb.splice(hzb, 1); var ABc = SSDOM.getCaretPairFromDomPosition(Hdb.body, rcb.path, rcb.offset, scb.path, scb.offset); var UAc = ABc.efb; var VAc = ABc.ffb; var result = rw_setHighlight(UAc.node, UAc.offset, VAc.node, VAc.offset, pcb); var cdb = new ira(result.start, 0, result.end, result.end.nodeValue.length); Ubb.push(cdb); Vbb.push(pcb); Hdb.refresh(); }function Fdb(range){ var nAc ="";nAc +="range.collapse="+ range.collapse +"\n";nAc +="range.duplicate="+ range.duplicate +"\n";nAc +="range.inRange="+ range.inRange +"\n";nAc +="range.text="+ range.text +"\n";nAc +="range.compareEndPoints="+ range.compareEndPoints +"\n";hya(nAc);}function Kdb(Ldb){ try { var Ufb = cRb(); var Hdb = null; var Idb = null; if (Ufb != null && Ufb.range != null) { Hdb = Ufb.range; Idb = Ufb.frame; } if(Hdb != null && Hdb instanceof String) { if(wDb != null) { wDb.selectionStart = 0; wDb.selectionEnd = 0; } wDb = null; if(Ldb) { Hdb = null; } else { return; } } if (Ufa) { if (Hdb == null || Hdb.length == 0 || Hdb.text.length == 0 || Ldb) { if(!Ldb) { var Ydb = confirm("Remove all highlights?"); if(!Ydb) { return; } } if(Zda) { igb = null; jgb = null; } var wzb = Ubb.length; for (var ieb = 0; ieb < wzb; ieb++) { var range = Ubb[ieb]; edb(range); Ubb[ieb] = null; Vbb[ieb] = null; } Ubb = new Array(); Vbb = new Array(); if(!document.compatMode.equalsTH("CSS1Compat")) { if(!uda && top.frames.length > 0) { var i = 0; var Odb = top.frames.length; for (i = 0; i < Odb; i++) { try { var Pdb = top.frames[i]; Hdb = Pdb.document.selection.createRange(); Hdb.expand("textedit"); edb(Hdb); } catch(e) { } } } else { Hdb = document.selection.createRange(); Hdb.expand("textedit"); edb(Hdb); } } if(Zda && fda && typeof(Zgb) !="undefined") { Zgb(); } return; } edb(Hdb); studySkillsHTMLRefreshRanges(); var wzb = Ubb.length; var ieb = 0; var adb = null; var Tdb = null; for (ieb = 0; ieb < wzb; ieb++) { adb = Ubb[ieb]; if (adb != null) { if (Hdb.inRange(adb)) { adb = null; Ubb.splice(ieb, 1); Vbb.splice(ieb, 1); ieb--; continue; } Tdb = adb.duplicate(); Tdb.collapse(true); if (Hdb.inRange(Tdb)) { var Xdb = adb.duplicate(); Xdb.collapse(false); while (Xdb.compareEndPoints("StartToEnd", Hdb) > 0) { Xdb.moveStart("character", -1); } edb(Ubb[ieb]); Ubb[ieb] = Xdb; Mcb(Ubb[ieb], Vbb[ieb]); } else { Tdb = adb.duplicate(); Tdb.collapse(false); if (Hdb.inRange(Tdb)) { var Wdb = adb.duplicate(); Wdb.collapse(true); while (Wdb.compareEndPoints("EndToStart", Hdb) < 0) { Wdb.moveEnd("character", 1); } edb(Ubb[ieb]); Ubb[ieb] = Wdb; Mcb(Ubb[ieb], Vbb[ieb]); } } if (adb.inRange(Hdb)) { edb(adb); var Wdb = adb.duplicate(); var Xdb = adb.duplicate(); Wdb.collapse(true); Xdb.collapse(false); while (Wdb.compareEndPoints("EndToStart", Hdb) < 0) { Wdb.moveEnd("character", 1); } while (Xdb.compareEndPoints("StartToEnd", Hdb) > 0) { Xdb.moveStart("character", -1); } edb(Ubb[ieb]); Ubb[ieb] = Wdb; Ubb.push(Xdb); Vbb.push(Vbb[ieb]); Mcb(Wdb, Vbb[ieb]); Mcb(Xdb, Vbb[ieb]); } } } Hdb.execCommand("UnSelect", false, null); } else { if (Hdb == null || Ldb) { if(!Ldb) { var Ydb = confirm("Remove all highlights?"); if(!Ydb) { return; } } if(Zda) { igb = null; jgb = null; } var Zdb = Ubb; Ubb = new Array(); Vbb = new Array(); for (var i = 0; i < Zdb.length; i++) { var adb = Zdb[i]; adb.refresh(); hFb(SSDOM.getListOfHighlightableNodes(adb.UAc, adb.VAc)); } } else { Hdb.refresh(); for (var ieb = 0; ieb < Ubb.length; ieb++) { var cdb = Ubb[ieb]; if(Hdb.body != cdb.body) { continue; } var ddb = Hdb.compareRange(cdb); switch(ddb) { case Yra: window.status ="Error occurred when trying to remove a highlight."; break; case Zra: case cra: cdb.refresh(); hFb(SSDOM.getListOfHighlightableNodes(cdb.UAc, cdb.VAc)); Ubb.splice(ieb, 1); Vbb.splice(ieb, 1); --ieb; Hdb.refresh(); break; case dra: case gra: case hra: zcb(ieb, Hdb, ddb); ++ieb; break; case fra: Ddb(ieb, Hdb); break; case era: Edb(ieb, Hdb); break; case ara: break; case bra: break; default : } } } uxa(); } if(Zda && fda && typeof(Zgb) !="undefined") { Zgb(); } if(Hfa[Sba]) { $rw_divPress(Sba); } } catch(exc) { Kya("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.description +" "+ exc.toString()); }}function edb(fdb){ fdb.execCommand("backcolor", false,"clear"); if( (jca & strike_icon) == strike_icon ) { fdb.execCommand("RemoveFormat", false, null); }}function gdb(a, b){ try { return a.compareEndPoints("EndToEnd", b); } catch(exc) { Kya("sortby "+ exc.message); return 0; }}function sortBySFF(a, b){ try { if(a.equals(b)) { return 0; } a.refresh(); b.refresh(); var hdb = a.getEndAsRange(); var idb = b.getEndAsRange(); return hdb.compareBoundaryPoints("END_TO_END", idb); } catch(exc) { Kya("sortBySFF "+ exc.message); return 0; }}function ldb(){ try { var sdb ="<div id='rwcollatewrapper' >"; var tdb = Heb("cyan"); var vdb = Heb("magenta"); if(tdb.length > 0 && vdb.length > 0) { vdb ="<br>"+ vdb; } var wdb = Heb("yellow"); if((tdb.length > 0 || vdb.length > 0) && wdb.length > 0) { wdb ="<br>"+ wdb; } var ydb = Heb("lightgreen"); if((tdb.length > 0 || vdb.length > 0 || wdb.length > 0) && ydb.length > 0) { ydb ="<br>"+ ydb; } sdb += tdb + vdb + wdb + ydb +'</div>';return sdb; } catch (exc) { Kya("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.toString()); return""; } }function qdb(Bzb){ if(Bzb.indexOf('\\') > -1 || Bzb.indexOf('~') > -1 || Bzb.indexOf('|') > -1) { var c; var i; for(i=0; i<Bzb.length; i++) { c = Bzb.charCodeAt(i); if(c==126) { Bzb = Bzb.substring(0, i) +"\\h"+ Bzb.substr(i+1); ++i; } else if(c==124) { Bzb = Bzb.substring(0, i) +"\\v"+ Bzb.substr(i+1); ++i; } else if(c==92) { Bzb = Bzb.substring(0, i) +"\\\\"+ Bzb.substr(i+1); ++i; } } } return Bzb;}function udb(){ try { var sdb; var tdb = Web("cyan"); sdb = tdb; var vdb = Web("magenta"); if(sdb.length > 0 && vdb.length > 0) { sdb +="|"; } sdb += vdb; var wdb = Web("yellow"); if(sdb.length > 0 && wdb.length > 0) { sdb +="|"; } sdb += wdb; var xdb = Web("orange"); if(sdb.length > 0 && xdb.length > 0) { sdb +="|"; } sdb += xdb; var ydb = Web("lightgreen"); if(sdb.length > 0 && ydb.length > 0) { sdb +="|"; } sdb += ydb; return sdb; } catch (exc) { Kya("Error in method: "+ exc.name +" "+ exc.message +" "+ exc.toString()); return""; }}function rw_selectCollateText(){ var IBc = document.getElementById("rwcollatewrapper"); if(IBc == null) { return; } if(Ufa) { var range = SSDOM.getRangeObject(IBc.ownerDocument.body); range.moveToElementText(IBc) ; range.select(); } else { var Yub = SSDOM.getNextNodeIgnoreChildren(IBc, false, null); if(Yub != null) { var range = new ira(IBc, 0, Yub, 0); Dya(range); } } try { var flash = dab.getConnector(); if(flash != null) { var Dtb = Qva(); if(!(Dtb == null || Dtb.length == 0)) { flash.setToClipboard(Dtb.valueOf()); } } } catch(ignore) { thLogE(ignore); }}function $rw_getHighlights(Xeb){ Xeb = Xeb.toLowerCase(); if(Xeb =="blue") { Xeb ="cyan"; } else if(Xeb =="red") { Xeb ="magenta"; } if(Xeb =="green") { Xeb ="lightgreen"; } return Heb(Xeb);}function Heb(Xeb){ var Lmb = new Array(); var wzb = Ubb.length; var Veb =""; var Yeb =''; var Dwb = 0; for (var Sfb = 0; Sfb < wzb; Sfb++) { var knb = Vbb[Sfb]; if (knb == Xeb) { Lmb.push(Ubb.slice(Sfb, Sfb + 1).pop()); } } if (Ufa) { Lmb.sort(gdb); } else { Lmb.sort(sortBySFF); } var qgb = Lmb.length; var Ovb; for (var Sfb = 0; Sfb < qgb; Sfb++) { var ABc; if (Ufa) { var Reb = Lmb.slice(Sfb, Sfb + 1).pop(); var Yfb = vVb(Reb.parentElement().ownerDocument.body, Reb); ABc = pPb(Yfb); } else { ABc = jPb(Lmb[Sfb]); } Ovb = SSDOM.getTextOverCaretRange(ABc); if (Ovb.length > 0) { Ovb = sUb(Ovb); if(Dwb > 0){Yeb +='<br>';} Dwb++; Yeb +=''+ Dwb +': '+ Ovb +'<br>'; } } if(Dwb > 0) { Veb +='<p></p>'; Veb +='<div style="background:'+ Xeb +'">'; Veb += Yeb; Veb +='</div><p></p>'; } return Veb;}function Web(Xeb){ var Lmb = new Array(); var wzb = Ubb.length; var Veb =""; var Yeb =''; for (var Sfb = 0; Sfb < wzb; Sfb++) { var knb = Vbb[Sfb]; if (knb == Xeb) { Lmb.push(Ubb.slice(Sfb, Sfb + 1).pop()); } } if (Ufa) { Lmb.sort(gdb); } else { Lmb.sort(sortBySFF); } var qgb = Lmb.length; var Ovb; for (var Sfb = 0; Sfb < qgb; Sfb++) { if (Ufa) { Ovb = Lmb.slice(Sfb, Sfb + 1).pop().text; } else { Ovb = Lmb[Sfb].toString(); } if (Ovb.length > 0) { Yeb +='~'+ qdb(Ovb); } } if(Yeb.length > 0) { Veb += Xeb; Veb += Yeb; } return Veb;}function eeb(){ return (Ubb != null && Ubb.length > 0);}function $rw_event_cyan(){ try { ebb('cyan'); } catch(err) { thLogE(err); }}function $rw_event_magenta(){ try { ebb('magenta'); } catch(err) { thLogE(err); }}function $rw_event_yellow(){ try { ebb('yellow'); } catch(err) { thLogE(err); }}function $rw_event_orange(){ try { ebb('orange'); } catch(err) { thLogE(err); }}function $rw_event_green(){ try { ebb('lightgreen'); } catch(err) { thLogE(err); }}function $rw_event_strike(){ try { ebb('strikethrough'); } catch(err) { thLogE(err); }}function $rw_event_clear(){ try { Kdb(false); } catch(err) { thLogE(err); }}function $rw_clearAllHighlights(){ Kdb(true);}function $rw_refreshHighlights(){ var feb = Zda; Zda = false; Kdb(true); Zda = feb; ggb();}function $rw_event_collect(){ try { cwa(); } catch(err) { thLogE(err); }}function $rw_event_vocabulary(){ try { (new SpeechStream.Vocab()).sendRequest(); } catch(err) { thLogE(err); }}function studySkillsHTMLRefreshRanges(){ try { var geb = null; var heb = false; var ieb = 0; for (ieb = 0; ieb < Ubb.length; ieb++) { geb = Ubb[ieb]; try { if (geb.text == null || geb.text =="") { geb = null; } } catch(exe) { thLogE(exe); geb = null; } if (geb == null) { Ubb.splice(ieb, 1); Vbb.splice(ieb, 1); heb = true; ieb--; } } return heb; } catch (exc) { Kya("Error in method studySkillsHTMLRefreshRanges: "+ exc.toString()); return false; }}var keb = function(Dgb){ try { eval(Dgb); } catch(err) { }};function neb(Xqb){ var jkb; if(jda != null) { jkb = jda; } else { jkb = hda; } var kkb = jya(false) + jkb +"/stickynoteserver/"; var peb ="cmd="+ cib; if(!Yda) { peb +="&custid="+ bkb(yca); } peb +="&titleid="+ bkb(zca); peb +="&pageid="+ bkb(Ada); peb +="&teacherid="+ bkb(dda); peb +="&studentid="+ bkb(bda); var Bfb = Xqb[0]; var Cfb = Xqb[1]; peb +="&ssdata="+ bkb(Bfb); if(Cfb != null) { peb +="&highlighttext="+ Cfb; } var seb = new SpeechStream.AjaxRequest(); seb.doPost(kkb, peb, keb, null, false);}function veb(Xqb){ var jkb; if(jda != null) { jkb = jda; } else { jkb = hda; } var kkb = jya(false) + jkb +"/stickynoteserver/?"+ Yib +"="+ cib; if(!Yda) { kkb +="&custid="+ bkb(yca); } kkb +="&titleid="+ bkb(zca); kkb +="&pageid="+ bkb(Ada); kkb +="&teacherid="+ bkb(dda); kkb +="&studentid="+ bkb(bda); var Bfb = Xqb[0]; var Cfb = Xqb[1]; kkb +="&ssdata="+ bkb(Bfb); if(Cfb != null) { kkb +="&highlighttext="+ encodeURIComponent(Cfb); } var mkb = document.createElement("script"); mkb.type ="text/javascript"; mkb.src = kkb; document.body.appendChild(mkb);}function Ffb(Xqb){ var flash = dab.getConnector(); if(flash != null) { var Bfb = Xqb[0]; var Cfb = Xqb[1]; var jkb; if(jda != null) { jkb = jda; } else { jkb = hda; } var kkb = jya(false) + jkb +"/stickynoteserver/"; var Hfb = cib; var Ifb = (Yda)?null:yca; var Jfb = zca; var Kfb = Ada; var Lfb = dda; var Mfb = bda; flash.storeIEHighlightData(kkb, Hfb, Ifb, Jfb, Kfb, Lfb, Mfb, Bfb, Cfb); }}function $rw_submitViaFlashCallback(p_strSrc){ eval(p_strSrc);}var Nfb = 0; function Qfb(){ var wzb = Ubb.length; var zhb =""; var Rfb = null; if(gda) { Rfb ="|"; } try { for (var Sfb = 0; Sfb < wzb; Sfb++) { zhb +="|"; var knb = Vbb[Sfb]; zhb += knb +"|"; var Ufb = Ubb[Sfb]; var xnb; var ynb; var QBc; if(Ufa) { if(gda) { QBc = Ufb.text; } var Yfb = vVb(document.body, Ufb); xnb = Yfb.xnb; ynb = Yfb.ynb; } else { Ufb.refresh(); if(gda) { QBc = Ufb.toString(); } var Etb = Ufb.UAc.node; var startOffset = Ufb.UAc.offset; var afb = Ufb.VAc.node; var endOffset = Ufb.VAc.offset; if(Etb.nodeType == 3 && Etb.nodeValue.trimTH().length == 0) { Etb = SSDOM.getNextNode(Etb, false, afb); startOffset = 0; while(Etb != null && Etb.nodeType == 3 && Etb.nodeValue.trimTH().length == 0) { Etb = SSDOM.getNextNode(Etb, false, afb); } if(Etb == null) { Etb = afb; } } var bfb = XTb(Etb, startOffset); if(afb.nodeType == 3 && afb.nodeValue.trimTH().length == 0) { endOffset = 0; while(Etb != afb && afb != null && afb.nodeType == 3 && afb.nodeValue.trimTH().length == 0) { afb = SSDOM.getPreviousNode(afb, false, Etb); } if(afb != null && afb.nodeType == 3 && afb.nodeValue.trimTH().length > 0) { endOffset = afb.nodeValue.length; } } var cfb = XTb(afb, endOffset); xnb = bfb; ynb = cfb; } if(xnb != null && ynb != null) { var ABc = SSDOM.getCaretPairFromDomPosition(document.body, xnb.path, xnb.offset, ynb.path, ynb.offset); var efb = ABc.efb; var ffb = ABc.ffb; zhb += kfb(efb) +"|"+ kfb(ffb); if(gda) { QBc = nUb(QBc,"|","&#124;"); Rfb += encodeURIComponent(QBc) +"|"; } } } if(zhb.length > 0) { zhb +="|*188"; } } catch(ignore) { thLogE(ignore); } return new Array(zhb, Rfb);}function kfb(lfb){ var Yub = lfb.node; var Tyb = lfb.offset; Tyb += hTb(Yub); var Tkb = Yub.parentNode; var Ukb = Tkb.getAttribute("id"); while((Ukb == null || Ukb.length == 0) && Tkb != document.body) { Tyb += hTb(Tkb); Tkb = Tkb.parentNode; Ukb = Tkb.getAttribute("id"); } if(Ukb != null && Ukb.length > 0) { Nkb ="idx"+ Ukb; if(Tkb != null && Tkb.firstChild != null) { var tyb = SSDOM.getFirstChildTextNode(Tkb, false); if(tyb.nodeType == 3) { var sfb = 0; var Dtb = tyb.nodeValue; while(Dtb.length > sfb) { if(Dtb.charCodeAt(sfb) == 32) { ++sfb; } else { break; } } Tyb -= sfb; } } } else { var pfb = XTb(lfb.node, lfb.offset); Nkb = pfb.path; Tyb = pfb.offset; } return Nkb +"|"+ Tyb;}function vfb(wfb, zfb, yfb){ var qfb = document.getElementById(wfb.substr(3)); if(qfb == null) { return null; } var Knb = SSDOM.getPositionInDom(qfb); var sfb = 0; if(yfb) { if(qfb != null && qfb.firstChild != null) { var tyb = SSDOM.getFirstChildTextNode(qfb, false); if(tyb == null) { return null; } if(tyb.nodeType == 3) { var Dtb = tyb.nodeValue; while(Dtb.length > sfb) { if(Dtb.charCodeAt(sfb) == 32) { ++sfb; } else { break; } } } } } return new THDomRefPt(Knb, zfb + sfb);}function Cgb(Dgb){ var Agb = false; if(Dgb.length > 4) { var Bgb = Dgb.substr(Dgb.length-4); if(Bgb.charAt(0) =="*") { var Egb = parseInt(Bgb.substr(Bgb.length-3), 10); if(Egb >= 188) { Agb = true; } } } var Fgb; var XAc; var Hgb; var Igb; var YAc; var Kgb; var Lgb; var Mgb; var tkb = Dgb.indexOf('|'); var ewb = Dgb.indexOf('|', tkb + 1); var Pgb = Dgb.indexOf('|', ewb + 1); var Qgb = Dgb.indexOf('|', Pgb + 1); var Rgb = Dgb.indexOf('|', Qgb + 1); var Sgb = Dgb.indexOf('|', Rgb + 1); while(tkb > -1 && ewb > -1 && Pgb > -1 && Qgb > -1 && Rgb > -1 && Sgb > -1) { Mgb = true; Fgb = Dgb.substring(tkb + 1, ewb); XAc = Dgb.substring(ewb + 1, Pgb); Hgb = Dgb.substring(Pgb + 1, Qgb); YAc = Dgb.substring(Qgb + 1, Rgb); Kgb = Dgb.substring(Rgb + 1, Sgb); Igb = parseInt(Hgb, 10); Lgb = parseInt(Kgb, 10); if(XAc.length > 3 && XAc.substring(0, 3) =="idx") { var Ugb = vfb(XAc, Igb, Agb); if(Ugb == null) { Mgb = false; } else { XAc = Ugb.path; Igb = Ugb.offset; } } if(YAc.length > 3 && YAc.substring(0, 3) =="idx") { var Ugb = vfb(YAc, Lgb, Agb); if(Ugb == null) { Mgb = false; } else { YAc = Ugb.path; Lgb = Ugb.offset; } } if(Mgb) { var range = null; if(Ufa) { range = rw_getAsTextRange(document.body, XAc, Igb, YAc, Lgb); } else { var ABc = SSDOM.getCaretPairFromDomPosition(document.body, XAc, Igb, YAc, Lgb); var UAc = ABc.efb; var VAc = ABc.ffb; if(UAc != null && VAc != null) { range = new ira(UAc.node, UAc.offset, VAc.node, VAc.offset); } } if(range != null) { xbb(range, Fgb); } else { Mgb = false; } } if(!Mgb) { if(jgb == null) { jgb =""; } jgb += Dgb.substring(tkb, Sgb); } tkb = Sgb; ewb = Dgb.indexOf('|', tkb + 1); Pgb = Dgb.indexOf('|', ewb + 1); Qgb = Dgb.indexOf('|', Pgb + 1); Rgb = Dgb.indexOf('|', Qgb + 1); Sgb = Dgb.indexOf('|', Rgb + 1); }}function Zgb(){ if(Kib) { Sib(); } var data = Qfb(); if(jgb != null) { data[0] = jgb + data[0]; if(gda) { Nfb = 1; } } else { Nfb = 0; } igb = null; if(Lfa) { Ffb(data); } else { if(gda) { neb(data); } else { veb(data); } }}function bgb(cgb){ eval(cgb);}function ggb(){ if(!SpeechStream.annotateBlock.m_bUseAnnotations) { return; } if(igb != null) { $rw_retrieveHighlightDataForPKTReply(igb); return; } if(Kib && !Lib) { return; } var d = new Date(); var Jmb = d.getTime(); var jkb; if(jda != null) { jkb = jda; } else { jkb = hda; } var kkb = jya(false) + jkb +"/stickynoteserver/?"+ Yib +"="; if(Kib && Mib) { kkb += eib; } else { kkb += dib; } if(!Yda) { kkb +="&custid="+ bkb(yca); } kkb +="&titleid="+ bkb(zca); kkb +="&pageid="+ bkb(Ada); kkb +="&teacherid="+ bkb(dda); kkb +="&studentid="+ bkb(bda); kkb +="&"+ Jmb + Math.floor(Math.random()*111); var mkb = document.createElement("script"); mkb.type ="text/javascript"; mkb.src = kkb; document.body.appendChild(mkb);}var igb = null;var jgb = null;function $rw_retrieveHighlightDataForPKTReply(Gwb){ var okb = Sga; try { if(typeof(eba_ignore_hidden) =="boolean"&& !eba_ignore_hidden) { Sga = false; } if(Gwb =="[e2020-nomatch]") { Uib(); } else { if(Kib && Mib) { Tib(); } } var OAc; if(Nfb == 2) { OAc = jgb; } jgb = null; Cgb(Gwb); igb = Gwb; if(Nfb == 2) { if(OAc != jgb) { Zgb(); } if(jgb == null) { Nfb = 0; } else { Nfb = 1; } } } catch(err) { Kya(err.message); } if(typeof(eba_ignore_hidden) =="boolean"&& !eba_ignore_hidden) { Sga = okb; } if(ada !="*"&& typeof(lkb) !="undefined") { lkb(); }}SpeechStream.Vocab = function(){ this.m_bSentenceSelection = false;};SpeechStream.Vocab.prototype.fetchWords = function(){ var wordList = new Array(); var Lmb = new Array(); var wzb = Ubb.length; for (var i=0; i<wzb; i++) { var yzb; if (Ufa) { yzb = Ubb.slice(i, i+1).pop().text; } else { yzb = Ubb[i].toString(); } if(yzb.trimTH().indexOf(" ") == -1) { Lmb.push(Ubb.slice(i, i+1).pop()); if(Lmb.length >= Bga && Bga != -1) { break; } } else { this.m_bSentenceSelection = true; } } if (Ufa) { Lmb.sort(gdb); } else { Lmb.sort(sortBySFF); } var qgb = Lmb.length; var Ovb; for (var j=0; j<qgb; j++) { if (Ufa) { Ovb = Lmb.slice(j, j+1).pop().text; } else { Ovb = Lmb[j].toString(); } wordList.push(Ixa(Ovb)); } return wordList;};SpeechStream.Vocab.prototype.generateRequestData = function(){ var sgb; sgb ="<html><body onload=\"document.getElementById('1').submit();\">Processing request"+"<form id=\"1\" action=\""; var kkb; var ugb = Math.floor(Math.random()*10); if(Aga != null) { kkb = Aga; if(kkb.length < 4 || kkb.substring(0, 4) !="http") { kkb = jya(false) + kkb; } if(kkb.substr(kkb.length - 1, 1) !="/") { kkb +="/"; } } else { kkb = jya(false) +"speechus.texthelp.com/"; } kkb +="rwvocabserver/vocab"; sgb += kkb; sgb +="\" method=\"post\"> "+"<input type=\"hidden\" name=\"userName\" value=\""+ Cda +"\">"; if(Cda != Dda) { sgb +="<input type=\"hidden\" name=\"password\" value=\""+ Dda +"\">"; } var vgb = Math.floor(Math.random()*10); if(yca != null) { sgb +="<input type=\"hidden\" name=\"custId\" value=\""+ yca +"\">"; } if(Gda != null) { sgb +="<input type=\"hidden\" name=\"locale\" value=\""+ Gda +"\">"; } var wgb = (new Date().getDate()); var wordList = this.fetchWords(); if(wordList == null || wordList.length == 0) { if(this.m_bSentenceSelection) { alert("No words selected to look up.  Lookup only works on single word selections, not sentences."); } else { alert("No words selected to look up."); } return null; } else { var Ovb =""; var i; for(i=0; i<wordList.length-1; i++) { Ovb += wordList[i] +"~"; } Ovb += wordList[wordList.length-1]; sgb +="<input type=\"hidden\" name=\"wordList\" value=\""+ Ovb +"\">"; } var zgb =""+ugb+NOb(ugb+Cda+wgb+vgb)+vgb; sgb +="<input type=\"hidden\" name=\"code\" value=\""+ zgb +"\">"; sgb +="</form></body></html>"; return sgb;};SpeechStream.Vocab.prototype.sendRequest = function(){ var Ahb = this.generateRequestData(); if(Ahb != null) { var Bhb; try { Bhb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); if(Aga != window.location.host) { Bhb.close(); Bhb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); } Bhb.focus(); Bhb.document.write(Ahb); Bhb.document.close(); } catch(err) { try { Bhb.close(); Bhb = open(null,'Vocabulary','width=600,height=600,status=1,toolbar=1,scrollbars=1,resizable=1,menubar=1'); Bhb.focus(); Bhb.document.write(Ahb); Bhb.document.close(); } catch(err2) { thLogE(err2); } } }};
